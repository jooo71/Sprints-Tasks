
led_version1_sprint.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000139c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00001410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00001410  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001410  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001440  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e1b  00000000  00000000  000015cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d8  00000000  00000000  000043e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001392  00000000  00000000  00004cbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00006054  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000528  00000000  00000000  00006250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000765  00000000  00000000  00006778  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00006edd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 57 00 	jmp	0xae	; 0xae <__ctors_end>
       4:	0c 94 43 06 	jmp	0xc86	; 0xc86 <__vector_1>
       8:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__vector_2>
       c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      10:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      14:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      18:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      1c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      20:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      24:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      28:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      30:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      34:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      3c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      40:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      48:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      4c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      50:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      54:	a6 00       	.word	0x00a6	; ????
      56:	b7 00       	.word	0x00b7	; ????
      58:	cc 00       	.word	0x00cc	; ????
      5a:	e9 00       	.word	0x00e9	; ????
      5c:	0e 01       	movw	r0, r28
      5e:	3b 01       	movw	r6, r22
      60:	64 01       	movw	r12, r8
      62:	89 01       	movw	r16, r18
      64:	aa 01       	movw	r20, r20
      66:	c8 01       	movw	r24, r16
      68:	d9 01       	movw	r26, r18
      6a:	ee 01       	movw	r28, r28
      6c:	0b 02       	muls	r16, r27
      6e:	30 02       	muls	r19, r16
      70:	5d 02       	muls	r21, r29
      72:	86 02       	muls	r24, r22
      74:	ab 02       	muls	r26, r27
      76:	cc 02       	muls	r28, r28
      78:	ea 02       	muls	r30, r26
      7a:	fb 02       	muls	r31, r27
      7c:	10 03       	mulsu	r17, r16
      7e:	2d 03       	fmul	r18, r21
      80:	52 03       	mulsu	r21, r18
      82:	7f 03       	fmul	r23, r23
      84:	a8 03       	fmulsu	r18, r16
      86:	cd 03       	fmulsu	r20, r21
      88:	ee 03       	fmulsu	r22, r22
      8a:	0c 04       	cpc	r0, r12
      8c:	1d 04       	cpc	r1, r13
      8e:	32 04       	cpc	r3, r2
      90:	4f 04       	cpc	r4, r15
      92:	74 04       	cpc	r7, r4
      94:	a1 04       	cpc	r10, r1
      96:	ca 04       	cpc	r12, r10
      98:	ef 04       	cpc	r14, r15
      9a:	10 05       	cpc	r17, r0
      9c:	2e 05       	cpc	r18, r14
      9e:	3f 05       	cpc	r19, r15
      a0:	54 05       	cpc	r21, r4
      a2:	71 05       	cpc	r23, r1
      a4:	96 05       	cpc	r25, r6
      a6:	c3 05       	cpc	r28, r3
      a8:	ec 05       	cpc	r30, r12
      aa:	11 06       	cpc	r1, r17
      ac:	32 06       	cpc	r3, r18

000000ae <__ctors_end>:
      ae:	11 24       	eor	r1, r1
      b0:	1f be       	out	0x3f, r1	; 63
      b2:	cf e5       	ldi	r28, 0x5F	; 95
      b4:	d8 e0       	ldi	r29, 0x08	; 8
      b6:	de bf       	out	0x3e, r29	; 62
      b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_clear_bss>:
      ba:	20 e0       	ldi	r18, 0x00	; 0
      bc:	a0 e6       	ldi	r26, 0x60	; 96
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a2 36       	cpi	r26, 0x62	; 98
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	0e 94 86 06 	call	0xd0c	; 0xd0c <main>
      ce:	0c 94 cc 09 	jmp	0x1398	; 0x1398 <_exit>

000000d2 <__bad_interrupt>:
      d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d6 <appstart>:
// 		uint8_t transitions_flag = RESET_TRANSITION_FLAG;
// 		uint8_t button_state = BUTTON_RELEASED;
// 		uint8_t data = LEDS_OFF;
		/**************LED1***************/
		/*check argument*/
		LED_init(PORT_A,PIN0);
      d6:	60 e0       	ldi	r22, 0x00	; 0
      d8:	81 e4       	ldi	r24, 0x41	; 65
      da:	0e 94 75 06 	call	0xcea	; 0xcea <LED_init>
		LED_init(PORT_A,PIN1);
      de:	61 e0       	ldi	r22, 0x01	; 1
      e0:	81 e4       	ldi	r24, 0x41	; 65
      e2:	0e 94 75 06 	call	0xcea	; 0xcea <LED_init>
		LED_init(PORT_A,PIN2);
      e6:	62 e0       	ldi	r22, 0x02	; 2
      e8:	81 e4       	ldi	r24, 0x41	; 65
      ea:	0e 94 75 06 	call	0xcea	; 0xcea <LED_init>
		LED_init(PORT_A,PIN3);
      ee:	63 e0       	ldi	r22, 0x03	; 3
      f0:	81 e4       	ldi	r24, 0x41	; 65
      f2:	0e 94 75 06 	call	0xcea	; 0xcea <LED_init>
		BUTTON_init(PORT_D,PIN2);
      f6:	62 e0       	ldi	r22, 0x02	; 2
      f8:	84 e4       	ldi	r24, 0x44	; 68
      fa:	0e 94 6f 06 	call	0xcde	; 0xcde <BUTTON_init>
		BUTTON_init(PORT_D,PIN3);
      fe:	63 e0       	ldi	r22, 0x03	; 3
     100:	84 e4       	ldi	r24, 0x44	; 68
     102:	0e 94 6f 06 	call	0xcde	; 0xcde <BUTTON_init>
		init_interrupt();
     106:	0e 94 e7 07 	call	0xfce	; 0xfce <init_interrupt>
		init_timer();
     10a:	0e 94 f5 07 	call	0xfea	; 0xfea <init_timer>
// 				break;
// 		}
			/**********interrupt*************/
			
			/**********Timer****************/
		switch(blink_mode)
     10e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     112:	82 30       	cpi	r24, 0x02	; 2
     114:	09 f4       	brne	.+2      	; 0x118 <appstart+0x42>
     116:	51 c2       	rjmp	.+1186   	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
     118:	30 f4       	brcc	.+12     	; 0x126 <appstart+0x50>
     11a:	88 23       	and	r24, r24
     11c:	59 f0       	breq	.+22     	; 0x134 <appstart+0x5e>
     11e:	81 30       	cpi	r24, 0x01	; 1
     120:	09 f4       	brne	.+2      	; 0x124 <appstart+0x4e>
     122:	29 c1       	rjmp	.+594    	; 0x376 <appstart+0x2a0>
     124:	f4 cf       	rjmp	.-24     	; 0x10e <appstart+0x38>
     126:	83 30       	cpi	r24, 0x03	; 3
     128:	09 f4       	brne	.+2      	; 0x12c <appstart+0x56>
     12a:	69 c3       	rjmp	.+1746   	; 0x7fe <__EEPROM_REGION_LENGTH__+0x3fe>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <appstart+0x5c>
     130:	88 c4       	rjmp	.+2320   	; 0xa42 <__stack+0x1e3>
     132:	ed cf       	rjmp	.-38     	; 0x10e <appstart+0x38>
		{
			case BLINK_1:
					switch(led_number)
     134:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <led_number>
     138:	8e 2f       	mov	r24, r30
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	89 30       	cpi	r24, 0x09	; 9
     13e:	91 05       	cpc	r25, r1
     140:	30 f7       	brcc	.-52     	; 0x10e <appstart+0x38>
     142:	fc 01       	movw	r30, r24
     144:	e6 5d       	subi	r30, 0xD6	; 214
     146:	ff 4f       	sbci	r31, 0xFF	; 255
     148:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__tablejump2__>
					{
						case led0:
						LED_off(PORT_A,PIN0);
     14c:	60 e0       	ldi	r22, 0x00	; 0
     14e:	81 e4       	ldi	r24, 0x41	; 65
     150:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN1);
     154:	61 e0       	ldi	r22, 0x01	; 1
     156:	81 e4       	ldi	r24, 0x41	; 65
     158:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN2);
     15c:	62 e0       	ldi	r22, 0x02	; 2
     15e:	81 e4       	ldi	r24, 0x41	; 65
     160:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN3);
     164:	63 e0       	ldi	r22, 0x03	; 3
     166:	81 e4       	ldi	r24, 0x41	; 65
     168:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						break;
     16c:	d0 cf       	rjmp	.-96     	; 0x10e <appstart+0x38>
						case led1:
						set_prescaler();
     16e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN0);
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	81 e4       	ldi	r24, 0x41	; 65
     176:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     17a:	84 e6       	ldi	r24, 0x64	; 100
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						set_prescaler();
     182:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN0);
     186:	60 e0       	ldi	r22, 0x00	; 0
     188:	81 e4       	ldi	r24, 0x41	; 65
     18a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     18e:	84 e8       	ldi	r24, 0x84	; 132
     190:	93 e0       	ldi	r25, 0x03	; 3
     192:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     196:	bb cf       	rjmp	.-138    	; 0x10e <appstart+0x38>
						case led2:
						set_prescaler();
     198:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN1);
     19c:	61 e0       	ldi	r22, 0x01	; 1
     19e:	81 e4       	ldi	r24, 0x41	; 65
     1a0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN0);
     1a4:	60 e0       	ldi	r22, 0x00	; 0
     1a6:	81 e4       	ldi	r24, 0x41	; 65
     1a8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     1ac:	84 e6       	ldi	r24, 0x64	; 100
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						
						set_prescaler();
     1b4:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN1);
     1b8:	61 e0       	ldi	r22, 0x01	; 1
     1ba:	81 e4       	ldi	r24, 0x41	; 65
     1bc:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN0);
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	81 e4       	ldi	r24, 0x41	; 65
     1c4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     1c8:	84 e8       	ldi	r24, 0x84	; 132
     1ca:	93 e0       	ldi	r25, 0x03	; 3
     1cc:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     1d0:	9e cf       	rjmp	.-196    	; 0x10e <appstart+0x38>
						case led3:
						set_prescaler();
     1d2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN2);
     1d6:	62 e0       	ldi	r22, 0x02	; 2
     1d8:	81 e4       	ldi	r24, 0x41	; 65
     1da:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN1);
     1de:	61 e0       	ldi	r22, 0x01	; 1
     1e0:	81 e4       	ldi	r24, 0x41	; 65
     1e2:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	81 e4       	ldi	r24, 0x41	; 65
     1ea:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     1ee:	84 e6       	ldi	r24, 0x64	; 100
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						
						set_prescaler();
     1f6:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN2);
     1fa:	62 e0       	ldi	r22, 0x02	; 2
     1fc:	81 e4       	ldi	r24, 0x41	; 65
     1fe:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN1);
     202:	61 e0       	ldi	r22, 0x01	; 1
     204:	81 e4       	ldi	r24, 0x41	; 65
     206:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN0);
     20a:	60 e0       	ldi	r22, 0x00	; 0
     20c:	81 e4       	ldi	r24, 0x41	; 65
     20e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     212:	84 e8       	ldi	r24, 0x84	; 132
     214:	93 e0       	ldi	r25, 0x03	; 3
     216:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     21a:	79 cf       	rjmp	.-270    	; 0x10e <appstart+0x38>
						case led4:
						set_prescaler();
     21c:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     220:	63 e0       	ldi	r22, 0x03	; 3
     222:	81 e4       	ldi	r24, 0x41	; 65
     224:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN0);
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	81 e4       	ldi	r24, 0x41	; 65
     22c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN1);
     230:	61 e0       	ldi	r22, 0x01	; 1
     232:	81 e4       	ldi	r24, 0x41	; 65
     234:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN2);
     238:	62 e0       	ldi	r22, 0x02	; 2
     23a:	81 e4       	ldi	r24, 0x41	; 65
     23c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     240:	84 e6       	ldi	r24, 0x64	; 100
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						
						set_prescaler();
     248:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     24c:	63 e0       	ldi	r22, 0x03	; 3
     24e:	81 e4       	ldi	r24, 0x41	; 65
     250:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN0);
     254:	60 e0       	ldi	r22, 0x00	; 0
     256:	81 e4       	ldi	r24, 0x41	; 65
     258:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN1);
     25c:	61 e0       	ldi	r22, 0x01	; 1
     25e:	81 e4       	ldi	r24, 0x41	; 65
     260:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN2);
     264:	62 e0       	ldi	r22, 0x02	; 2
     266:	81 e4       	ldi	r24, 0x41	; 65
     268:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     26c:	84 e8       	ldi	r24, 0x84	; 132
     26e:	93 e0       	ldi	r25, 0x03	; 3
     270:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     274:	4c cf       	rjmp	.-360    	; 0x10e <appstart+0x38>
						case led5:
						LED_off(PORT_A,PIN0);
     276:	60 e0       	ldi	r22, 0x00	; 0
     278:	81 e4       	ldi	r24, 0x41	; 65
     27a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						set_prescaler();
     27e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     282:	63 e0       	ldi	r22, 0x03	; 3
     284:	81 e4       	ldi	r24, 0x41	; 65
     286:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN1);
     28a:	61 e0       	ldi	r22, 0x01	; 1
     28c:	81 e4       	ldi	r24, 0x41	; 65
     28e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN2);
     292:	62 e0       	ldi	r22, 0x02	; 2
     294:	81 e4       	ldi	r24, 0x41	; 65
     296:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     29a:	84 e6       	ldi	r24, 0x64	; 100
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						
						set_prescaler();
     2a2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     2a6:	63 e0       	ldi	r22, 0x03	; 3
     2a8:	81 e4       	ldi	r24, 0x41	; 65
     2aa:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN1);
     2ae:	61 e0       	ldi	r22, 0x01	; 1
     2b0:	81 e4       	ldi	r24, 0x41	; 65
     2b2:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN2);
     2b6:	62 e0       	ldi	r22, 0x02	; 2
     2b8:	81 e4       	ldi	r24, 0x41	; 65
     2ba:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     2be:	84 e8       	ldi	r24, 0x84	; 132
     2c0:	93 e0       	ldi	r25, 0x03	; 3
     2c2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     2c6:	23 cf       	rjmp	.-442    	; 0x10e <appstart+0x38>
						case led6:
						LED_off(PORT_A,PIN0);
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	81 e4       	ldi	r24, 0x41	; 65
     2cc:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN1);
     2d0:	61 e0       	ldi	r22, 0x01	; 1
     2d2:	81 e4       	ldi	r24, 0x41	; 65
     2d4:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						set_prescaler();
     2d8:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     2dc:	63 e0       	ldi	r22, 0x03	; 3
     2de:	81 e4       	ldi	r24, 0x41	; 65
     2e0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN2);
     2e4:	62 e0       	ldi	r22, 0x02	; 2
     2e6:	81 e4       	ldi	r24, 0x41	; 65
     2e8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     2ec:	84 e6       	ldi	r24, 0x64	; 100
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						
						set_prescaler();
     2f4:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     2f8:	63 e0       	ldi	r22, 0x03	; 3
     2fa:	81 e4       	ldi	r24, 0x41	; 65
     2fc:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						LED_toggle(PORT_A,PIN2);
     300:	62 e0       	ldi	r22, 0x02	; 2
     302:	81 e4       	ldi	r24, 0x41	; 65
     304:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     308:	84 e8       	ldi	r24, 0x84	; 132
     30a:	93 e0       	ldi	r25, 0x03	; 3
     30c:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     310:	fe ce       	rjmp	.-516    	; 0x10e <appstart+0x38>
						case led7:
						LED_off(PORT_A,PIN0);
     312:	60 e0       	ldi	r22, 0x00	; 0
     314:	81 e4       	ldi	r24, 0x41	; 65
     316:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN1);
     31a:	61 e0       	ldi	r22, 0x01	; 1
     31c:	81 e4       	ldi	r24, 0x41	; 65
     31e:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN2);
     322:	62 e0       	ldi	r22, 0x02	; 2
     324:	81 e4       	ldi	r24, 0x41	; 65
     326:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						set_prescaler();
     32a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     32e:	63 e0       	ldi	r22, 0x03	; 3
     330:	81 e4       	ldi	r24, 0x41	; 65
     332:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(100);
     336:	84 e6       	ldi	r24, 0x64	; 100
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						
						set_prescaler();
     33e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
						LED_toggle(PORT_A,PIN3);
     342:	63 e0       	ldi	r22, 0x03	; 3
     344:	81 e4       	ldi	r24, 0x41	; 65
     346:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
						delay(900);
     34a:	84 e8       	ldi	r24, 0x84	; 132
     34c:	93 e0       	ldi	r25, 0x03	; 3
     34e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
						break;
     352:	dd ce       	rjmp	.-582    	; 0x10e <appstart+0x38>
						case led8:
						LED_off(PORT_A,PIN0);
     354:	60 e0       	ldi	r22, 0x00	; 0
     356:	81 e4       	ldi	r24, 0x41	; 65
     358:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN1);
     35c:	61 e0       	ldi	r22, 0x01	; 1
     35e:	81 e4       	ldi	r24, 0x41	; 65
     360:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN2);
     364:	62 e0       	ldi	r22, 0x02	; 2
     366:	81 e4       	ldi	r24, 0x41	; 65
     368:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						LED_off(PORT_A,PIN3);
     36c:	63 e0       	ldi	r22, 0x03	; 3
     36e:	81 e4       	ldi	r24, 0x41	; 65
     370:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
						break;
     374:	cc ce       	rjmp	.-616    	; 0x10e <appstart+0x38>
						
					}
					break;
			case BLINK_2:
						switch(led_number)
     376:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <led_number>
     37a:	8e 2f       	mov	r24, r30
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	89 30       	cpi	r24, 0x09	; 9
     380:	91 05       	cpc	r25, r1
     382:	08 f0       	brcs	.+2      	; 0x386 <appstart+0x2b0>
     384:	c4 ce       	rjmp	.-632    	; 0x10e <appstart+0x38>
     386:	fc 01       	movw	r30, r24
     388:	ed 5c       	subi	r30, 0xCD	; 205
     38a:	ff 4f       	sbci	r31, 0xFF	; 255
     38c:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__tablejump2__>
						{
							case led0:
							LED_off(PORT_A,PIN0);
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	81 e4       	ldi	r24, 0x41	; 65
     394:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     398:	61 e0       	ldi	r22, 0x01	; 1
     39a:	81 e4       	ldi	r24, 0x41	; 65
     39c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     3a0:	62 e0       	ldi	r22, 0x02	; 2
     3a2:	81 e4       	ldi	r24, 0x41	; 65
     3a4:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     3a8:	63 e0       	ldi	r22, 0x03	; 3
     3aa:	81 e4       	ldi	r24, 0x41	; 65
     3ac:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     3b0:	ae ce       	rjmp	.-676    	; 0x10e <appstart+0x38>
							case led1:
							set_prescaler();
     3b2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     3b6:	60 e0       	ldi	r22, 0x00	; 0
     3b8:	81 e4       	ldi	r24, 0x41	; 65
     3ba:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     3be:	88 ec       	ldi	r24, 0xC8	; 200
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							set_prescaler();
     3c6:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	81 e4       	ldi	r24, 0x41	; 65
     3ce:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     3d2:	80 e2       	ldi	r24, 0x20	; 32
     3d4:	93 e0       	ldi	r25, 0x03	; 3
     3d6:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     3da:	99 ce       	rjmp	.-718    	; 0x10e <appstart+0x38>
							case led2:
							set_prescaler();
     3dc:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     3e0:	61 e0       	ldi	r22, 0x01	; 1
     3e2:	81 e4       	ldi	r24, 0x41	; 65
     3e4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     3e8:	60 e0       	ldi	r22, 0x00	; 0
     3ea:	81 e4       	ldi	r24, 0x41	; 65
     3ec:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     3f0:	88 ec       	ldi	r24, 0xC8	; 200
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     3f8:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     3fc:	61 e0       	ldi	r22, 0x01	; 1
     3fe:	81 e4       	ldi	r24, 0x41	; 65
     400:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     404:	60 e0       	ldi	r22, 0x00	; 0
     406:	81 e4       	ldi	r24, 0x41	; 65
     408:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     40c:	80 e2       	ldi	r24, 0x20	; 32
     40e:	93 e0       	ldi	r25, 0x03	; 3
     410:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     414:	7c ce       	rjmp	.-776    	; 0x10e <appstart+0x38>
							case led3:
							set_prescaler();
     416:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     41a:	62 e0       	ldi	r22, 0x02	; 2
     41c:	81 e4       	ldi	r24, 0x41	; 65
     41e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     422:	61 e0       	ldi	r22, 0x01	; 1
     424:	81 e4       	ldi	r24, 0x41	; 65
     426:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     42a:	60 e0       	ldi	r22, 0x00	; 0
     42c:	81 e4       	ldi	r24, 0x41	; 65
     42e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     432:	88 ec       	ldi	r24, 0xC8	; 200
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     43a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     43e:	62 e0       	ldi	r22, 0x02	; 2
     440:	81 e4       	ldi	r24, 0x41	; 65
     442:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     446:	61 e0       	ldi	r22, 0x01	; 1
     448:	81 e4       	ldi	r24, 0x41	; 65
     44a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     44e:	60 e0       	ldi	r22, 0x00	; 0
     450:	81 e4       	ldi	r24, 0x41	; 65
     452:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     456:	80 e2       	ldi	r24, 0x20	; 32
     458:	93 e0       	ldi	r25, 0x03	; 3
     45a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     45e:	57 ce       	rjmp	.-850    	; 0x10e <appstart+0x38>
							case led4:
							set_prescaler();
     460:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     464:	63 e0       	ldi	r22, 0x03	; 3
     466:	81 e4       	ldi	r24, 0x41	; 65
     468:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     46c:	60 e0       	ldi	r22, 0x00	; 0
     46e:	81 e4       	ldi	r24, 0x41	; 65
     470:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     474:	61 e0       	ldi	r22, 0x01	; 1
     476:	81 e4       	ldi	r24, 0x41	; 65
     478:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     47c:	62 e0       	ldi	r22, 0x02	; 2
     47e:	81 e4       	ldi	r24, 0x41	; 65
     480:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     484:	88 ec       	ldi	r24, 0xC8	; 200
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     48c:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     490:	63 e0       	ldi	r22, 0x03	; 3
     492:	81 e4       	ldi	r24, 0x41	; 65
     494:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     498:	60 e0       	ldi	r22, 0x00	; 0
     49a:	81 e4       	ldi	r24, 0x41	; 65
     49c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	81 e4       	ldi	r24, 0x41	; 65
     4a4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     4a8:	62 e0       	ldi	r22, 0x02	; 2
     4aa:	81 e4       	ldi	r24, 0x41	; 65
     4ac:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     4b0:	80 e2       	ldi	r24, 0x20	; 32
     4b2:	93 e0       	ldi	r25, 0x03	; 3
     4b4:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     4b8:	2a ce       	rjmp	.-940    	; 0x10e <appstart+0x38>
							case led5:
							LED_off(PORT_A,PIN0);
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	81 e4       	ldi	r24, 0x41	; 65
     4be:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     4c2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     4c6:	63 e0       	ldi	r22, 0x03	; 3
     4c8:	81 e4       	ldi	r24, 0x41	; 65
     4ca:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     4ce:	61 e0       	ldi	r22, 0x01	; 1
     4d0:	81 e4       	ldi	r24, 0x41	; 65
     4d2:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     4d6:	62 e0       	ldi	r22, 0x02	; 2
     4d8:	81 e4       	ldi	r24, 0x41	; 65
     4da:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     4de:	88 ec       	ldi	r24, 0xC8	; 200
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     4e6:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     4ea:	63 e0       	ldi	r22, 0x03	; 3
     4ec:	81 e4       	ldi	r24, 0x41	; 65
     4ee:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     4f2:	61 e0       	ldi	r22, 0x01	; 1
     4f4:	81 e4       	ldi	r24, 0x41	; 65
     4f6:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     4fa:	62 e0       	ldi	r22, 0x02	; 2
     4fc:	81 e4       	ldi	r24, 0x41	; 65
     4fe:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     502:	80 e2       	ldi	r24, 0x20	; 32
     504:	93 e0       	ldi	r25, 0x03	; 3
     506:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     50a:	01 ce       	rjmp	.-1022   	; 0x10e <appstart+0x38>
							case led6:
							LED_off(PORT_A,PIN0);
     50c:	60 e0       	ldi	r22, 0x00	; 0
     50e:	81 e4       	ldi	r24, 0x41	; 65
     510:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	81 e4       	ldi	r24, 0x41	; 65
     518:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     51c:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     520:	63 e0       	ldi	r22, 0x03	; 3
     522:	81 e4       	ldi	r24, 0x41	; 65
     524:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     528:	62 e0       	ldi	r22, 0x02	; 2
     52a:	81 e4       	ldi	r24, 0x41	; 65
     52c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     530:	88 ec       	ldi	r24, 0xC8	; 200
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     538:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     53c:	63 e0       	ldi	r22, 0x03	; 3
     53e:	81 e4       	ldi	r24, 0x41	; 65
     540:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     544:	62 e0       	ldi	r22, 0x02	; 2
     546:	81 e4       	ldi	r24, 0x41	; 65
     548:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     54c:	80 e2       	ldi	r24, 0x20	; 32
     54e:	93 e0       	ldi	r25, 0x03	; 3
     550:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     554:	dc cd       	rjmp	.-1096   	; 0x10e <appstart+0x38>
							case led7:
							LED_off(PORT_A,PIN0);
     556:	60 e0       	ldi	r22, 0x00	; 0
     558:	81 e4       	ldi	r24, 0x41	; 65
     55a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     55e:	61 e0       	ldi	r22, 0x01	; 1
     560:	81 e4       	ldi	r24, 0x41	; 65
     562:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     566:	62 e0       	ldi	r22, 0x02	; 2
     568:	81 e4       	ldi	r24, 0x41	; 65
     56a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     56e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     572:	63 e0       	ldi	r22, 0x03	; 3
     574:	81 e4       	ldi	r24, 0x41	; 65
     576:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     57a:	88 ec       	ldi	r24, 0xC8	; 200
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     582:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     586:	63 e0       	ldi	r22, 0x03	; 3
     588:	81 e4       	ldi	r24, 0x41	; 65
     58a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     58e:	80 e2       	ldi	r24, 0x20	; 32
     590:	93 e0       	ldi	r25, 0x03	; 3
     592:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     596:	bb cd       	rjmp	.-1162   	; 0x10e <appstart+0x38>
							case led8:
							LED_off(PORT_A,PIN0);
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	81 e4       	ldi	r24, 0x41	; 65
     59c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     5a0:	61 e0       	ldi	r22, 0x01	; 1
     5a2:	81 e4       	ldi	r24, 0x41	; 65
     5a4:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     5a8:	62 e0       	ldi	r22, 0x02	; 2
     5aa:	81 e4       	ldi	r24, 0x41	; 65
     5ac:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     5b0:	63 e0       	ldi	r22, 0x03	; 3
     5b2:	81 e4       	ldi	r24, 0x41	; 65
     5b4:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     5b8:	aa cd       	rjmp	.-1196   	; 0x10e <appstart+0x38>
							
						}
						break;
				
			case BLINK_3:
						switch(led_number)
     5ba:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <led_number>
     5be:	8e 2f       	mov	r24, r30
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	89 30       	cpi	r24, 0x09	; 9
     5c4:	91 05       	cpc	r25, r1
     5c6:	08 f0       	brcs	.+2      	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
     5c8:	a2 cd       	rjmp	.-1212   	; 0x10e <appstart+0x38>
     5ca:	fc 01       	movw	r30, r24
     5cc:	e4 5c       	subi	r30, 0xC4	; 196
     5ce:	ff 4f       	sbci	r31, 0xFF	; 255
     5d0:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__tablejump2__>
						{
							case led0:
							LED_off(PORT_A,PIN0);
     5d4:	60 e0       	ldi	r22, 0x00	; 0
     5d6:	81 e4       	ldi	r24, 0x41	; 65
     5d8:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     5dc:	61 e0       	ldi	r22, 0x01	; 1
     5de:	81 e4       	ldi	r24, 0x41	; 65
     5e0:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     5e4:	62 e0       	ldi	r22, 0x02	; 2
     5e6:	81 e4       	ldi	r24, 0x41	; 65
     5e8:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     5ec:	63 e0       	ldi	r22, 0x03	; 3
     5ee:	81 e4       	ldi	r24, 0x41	; 65
     5f0:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     5f4:	8c cd       	rjmp	.-1256   	; 0x10e <appstart+0x38>
							case led1:
							set_prescaler();
     5f6:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     5fa:	60 e0       	ldi	r22, 0x00	; 0
     5fc:	81 e4       	ldi	r24, 0x41	; 65
     5fe:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     602:	8c e2       	ldi	r24, 0x2C	; 44
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							set_prescaler();
     60a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	81 e4       	ldi	r24, 0x41	; 65
     612:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     616:	8c eb       	ldi	r24, 0xBC	; 188
     618:	92 e0       	ldi	r25, 0x02	; 2
     61a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     61e:	77 cd       	rjmp	.-1298   	; 0x10e <appstart+0x38>
							case led2:
							set_prescaler();
     620:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     624:	61 e0       	ldi	r22, 0x01	; 1
     626:	81 e4       	ldi	r24, 0x41	; 65
     628:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     62c:	60 e0       	ldi	r22, 0x00	; 0
     62e:	81 e4       	ldi	r24, 0x41	; 65
     630:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     634:	8c e2       	ldi	r24, 0x2C	; 44
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     63c:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     640:	61 e0       	ldi	r22, 0x01	; 1
     642:	81 e4       	ldi	r24, 0x41	; 65
     644:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     648:	60 e0       	ldi	r22, 0x00	; 0
     64a:	81 e4       	ldi	r24, 0x41	; 65
     64c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     650:	8c eb       	ldi	r24, 0xBC	; 188
     652:	92 e0       	ldi	r25, 0x02	; 2
     654:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     658:	5a cd       	rjmp	.-1356   	; 0x10e <appstart+0x38>
							case led3:
							set_prescaler();
     65a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     65e:	62 e0       	ldi	r22, 0x02	; 2
     660:	81 e4       	ldi	r24, 0x41	; 65
     662:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     666:	61 e0       	ldi	r22, 0x01	; 1
     668:	81 e4       	ldi	r24, 0x41	; 65
     66a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     66e:	60 e0       	ldi	r22, 0x00	; 0
     670:	81 e4       	ldi	r24, 0x41	; 65
     672:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     676:	8c e2       	ldi	r24, 0x2C	; 44
     678:	91 e0       	ldi	r25, 0x01	; 1
     67a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     67e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     682:	62 e0       	ldi	r22, 0x02	; 2
     684:	81 e4       	ldi	r24, 0x41	; 65
     686:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     68a:	61 e0       	ldi	r22, 0x01	; 1
     68c:	81 e4       	ldi	r24, 0x41	; 65
     68e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     692:	60 e0       	ldi	r22, 0x00	; 0
     694:	81 e4       	ldi	r24, 0x41	; 65
     696:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     69a:	8c eb       	ldi	r24, 0xBC	; 188
     69c:	92 e0       	ldi	r25, 0x02	; 2
     69e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     6a2:	35 cd       	rjmp	.-1430   	; 0x10e <appstart+0x38>
							case led4:
							set_prescaler();
     6a4:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     6a8:	63 e0       	ldi	r22, 0x03	; 3
     6aa:	81 e4       	ldi	r24, 0x41	; 65
     6ac:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	81 e4       	ldi	r24, 0x41	; 65
     6b4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     6b8:	61 e0       	ldi	r22, 0x01	; 1
     6ba:	81 e4       	ldi	r24, 0x41	; 65
     6bc:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     6c0:	62 e0       	ldi	r22, 0x02	; 2
     6c2:	81 e4       	ldi	r24, 0x41	; 65
     6c4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     6c8:	8c e2       	ldi	r24, 0x2C	; 44
     6ca:	91 e0       	ldi	r25, 0x01	; 1
     6cc:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     6d0:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     6d4:	63 e0       	ldi	r22, 0x03	; 3
     6d6:	81 e4       	ldi	r24, 0x41	; 65
     6d8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     6dc:	60 e0       	ldi	r22, 0x00	; 0
     6de:	81 e4       	ldi	r24, 0x41	; 65
     6e0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     6e4:	61 e0       	ldi	r22, 0x01	; 1
     6e6:	81 e4       	ldi	r24, 0x41	; 65
     6e8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     6ec:	62 e0       	ldi	r22, 0x02	; 2
     6ee:	81 e4       	ldi	r24, 0x41	; 65
     6f0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     6f4:	8c eb       	ldi	r24, 0xBC	; 188
     6f6:	92 e0       	ldi	r25, 0x02	; 2
     6f8:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     6fc:	08 cd       	rjmp	.-1520   	; 0x10e <appstart+0x38>
							case led5:
							LED_off(PORT_A,PIN0);
     6fe:	60 e0       	ldi	r22, 0x00	; 0
     700:	81 e4       	ldi	r24, 0x41	; 65
     702:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     706:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     70a:	63 e0       	ldi	r22, 0x03	; 3
     70c:	81 e4       	ldi	r24, 0x41	; 65
     70e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     712:	61 e0       	ldi	r22, 0x01	; 1
     714:	81 e4       	ldi	r24, 0x41	; 65
     716:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     71a:	62 e0       	ldi	r22, 0x02	; 2
     71c:	81 e4       	ldi	r24, 0x41	; 65
     71e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     722:	8c e2       	ldi	r24, 0x2C	; 44
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     72a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     72e:	63 e0       	ldi	r22, 0x03	; 3
     730:	81 e4       	ldi	r24, 0x41	; 65
     732:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     736:	61 e0       	ldi	r22, 0x01	; 1
     738:	81 e4       	ldi	r24, 0x41	; 65
     73a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     73e:	62 e0       	ldi	r22, 0x02	; 2
     740:	81 e4       	ldi	r24, 0x41	; 65
     742:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     746:	8c eb       	ldi	r24, 0xBC	; 188
     748:	92 e0       	ldi	r25, 0x02	; 2
     74a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     74e:	df cc       	rjmp	.-1602   	; 0x10e <appstart+0x38>
							case led6:
							LED_off(PORT_A,PIN0);
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	81 e4       	ldi	r24, 0x41	; 65
     754:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     758:	61 e0       	ldi	r22, 0x01	; 1
     75a:	81 e4       	ldi	r24, 0x41	; 65
     75c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     760:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     764:	63 e0       	ldi	r22, 0x03	; 3
     766:	81 e4       	ldi	r24, 0x41	; 65
     768:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     76c:	62 e0       	ldi	r22, 0x02	; 2
     76e:	81 e4       	ldi	r24, 0x41	; 65
     770:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     774:	8c e2       	ldi	r24, 0x2C	; 44
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     77c:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     780:	63 e0       	ldi	r22, 0x03	; 3
     782:	81 e4       	ldi	r24, 0x41	; 65
     784:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     788:	62 e0       	ldi	r22, 0x02	; 2
     78a:	81 e4       	ldi	r24, 0x41	; 65
     78c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     790:	8c eb       	ldi	r24, 0xBC	; 188
     792:	92 e0       	ldi	r25, 0x02	; 2
     794:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     798:	ba cc       	rjmp	.-1676   	; 0x10e <appstart+0x38>
							case led7:
							LED_off(PORT_A,PIN0);
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	81 e4       	ldi	r24, 0x41	; 65
     79e:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     7a2:	61 e0       	ldi	r22, 0x01	; 1
     7a4:	81 e4       	ldi	r24, 0x41	; 65
     7a6:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     7aa:	62 e0       	ldi	r22, 0x02	; 2
     7ac:	81 e4       	ldi	r24, 0x41	; 65
     7ae:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     7b2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     7b6:	63 e0       	ldi	r22, 0x03	; 3
     7b8:	81 e4       	ldi	r24, 0x41	; 65
     7ba:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(300);
     7be:	8c e2       	ldi	r24, 0x2C	; 44
     7c0:	91 e0       	ldi	r25, 0x01	; 1
     7c2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     7c6:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     7ca:	63 e0       	ldi	r22, 0x03	; 3
     7cc:	81 e4       	ldi	r24, 0x41	; 65
     7ce:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(700);
     7d2:	8c eb       	ldi	r24, 0xBC	; 188
     7d4:	92 e0       	ldi	r25, 0x02	; 2
     7d6:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     7da:	99 cc       	rjmp	.-1742   	; 0x10e <appstart+0x38>
							case led8:
							LED_off(PORT_A,PIN0);
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	81 e4       	ldi	r24, 0x41	; 65
     7e0:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     7e4:	61 e0       	ldi	r22, 0x01	; 1
     7e6:	81 e4       	ldi	r24, 0x41	; 65
     7e8:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     7ec:	62 e0       	ldi	r22, 0x02	; 2
     7ee:	81 e4       	ldi	r24, 0x41	; 65
     7f0:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     7f4:	63 e0       	ldi	r22, 0x03	; 3
     7f6:	81 e4       	ldi	r24, 0x41	; 65
     7f8:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     7fc:	88 cc       	rjmp	.-1776   	; 0x10e <appstart+0x38>
							
						}
						break;
			case BLINK_4:
						switch(led_number)
     7fe:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <led_number>
     802:	8e 2f       	mov	r24, r30
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	89 30       	cpi	r24, 0x09	; 9
     808:	91 05       	cpc	r25, r1
     80a:	08 f0       	brcs	.+2      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     80c:	80 cc       	rjmp	.-1792   	; 0x10e <appstart+0x38>
     80e:	fc 01       	movw	r30, r24
     810:	eb 5b       	subi	r30, 0xBB	; 187
     812:	ff 4f       	sbci	r31, 0xFF	; 255
     814:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__tablejump2__>
						{
							case led0:
							LED_off(PORT_A,PIN0);
     818:	60 e0       	ldi	r22, 0x00	; 0
     81a:	81 e4       	ldi	r24, 0x41	; 65
     81c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     820:	61 e0       	ldi	r22, 0x01	; 1
     822:	81 e4       	ldi	r24, 0x41	; 65
     824:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     828:	62 e0       	ldi	r22, 0x02	; 2
     82a:	81 e4       	ldi	r24, 0x41	; 65
     82c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     830:	63 e0       	ldi	r22, 0x03	; 3
     832:	81 e4       	ldi	r24, 0x41	; 65
     834:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     838:	6a cc       	rjmp	.-1836   	; 0x10e <appstart+0x38>
							case led1:
							set_prescaler();
     83a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     83e:	60 e0       	ldi	r22, 0x00	; 0
     840:	81 e4       	ldi	r24, 0x41	; 65
     842:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     846:	84 ef       	ldi	r24, 0xF4	; 244
     848:	91 e0       	ldi	r25, 0x01	; 1
     84a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							set_prescaler();
     84e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	81 e4       	ldi	r24, 0x41	; 65
     856:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     85a:	84 ef       	ldi	r24, 0xF4	; 244
     85c:	91 e0       	ldi	r25, 0x01	; 1
     85e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     862:	55 cc       	rjmp	.-1878   	; 0x10e <appstart+0x38>
							case led2:
							set_prescaler();
     864:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     868:	61 e0       	ldi	r22, 0x01	; 1
     86a:	81 e4       	ldi	r24, 0x41	; 65
     86c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     870:	60 e0       	ldi	r22, 0x00	; 0
     872:	81 e4       	ldi	r24, 0x41	; 65
     874:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     878:	84 ef       	ldi	r24, 0xF4	; 244
     87a:	91 e0       	ldi	r25, 0x01	; 1
     87c:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     880:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     884:	61 e0       	ldi	r22, 0x01	; 1
     886:	81 e4       	ldi	r24, 0x41	; 65
     888:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     88c:	60 e0       	ldi	r22, 0x00	; 0
     88e:	81 e4       	ldi	r24, 0x41	; 65
     890:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     894:	84 ef       	ldi	r24, 0xF4	; 244
     896:	91 e0       	ldi	r25, 0x01	; 1
     898:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     89c:	38 cc       	rjmp	.-1936   	; 0x10e <appstart+0x38>
							case led3:
							set_prescaler();
     89e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     8a2:	62 e0       	ldi	r22, 0x02	; 2
     8a4:	81 e4       	ldi	r24, 0x41	; 65
     8a6:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     8aa:	61 e0       	ldi	r22, 0x01	; 1
     8ac:	81 e4       	ldi	r24, 0x41	; 65
     8ae:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	81 e4       	ldi	r24, 0x41	; 65
     8b6:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     8ba:	84 ef       	ldi	r24, 0xF4	; 244
     8bc:	91 e0       	ldi	r25, 0x01	; 1
     8be:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     8c2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     8c6:	62 e0       	ldi	r22, 0x02	; 2
     8c8:	81 e4       	ldi	r24, 0x41	; 65
     8ca:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     8ce:	61 e0       	ldi	r22, 0x01	; 1
     8d0:	81 e4       	ldi	r24, 0x41	; 65
     8d2:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     8d6:	60 e0       	ldi	r22, 0x00	; 0
     8d8:	81 e4       	ldi	r24, 0x41	; 65
     8da:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     8de:	84 ef       	ldi	r24, 0xF4	; 244
     8e0:	91 e0       	ldi	r25, 0x01	; 1
     8e2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     8e6:	13 cc       	rjmp	.-2010   	; 0x10e <appstart+0x38>
							case led4:
							set_prescaler();
     8e8:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     8ec:	63 e0       	ldi	r22, 0x03	; 3
     8ee:	81 e4       	ldi	r24, 0x41	; 65
     8f0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     8f4:	60 e0       	ldi	r22, 0x00	; 0
     8f6:	81 e4       	ldi	r24, 0x41	; 65
     8f8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     8fc:	61 e0       	ldi	r22, 0x01	; 1
     8fe:	81 e4       	ldi	r24, 0x41	; 65
     900:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     904:	62 e0       	ldi	r22, 0x02	; 2
     906:	81 e4       	ldi	r24, 0x41	; 65
     908:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     90c:	84 ef       	ldi	r24, 0xF4	; 244
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     914:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     918:	63 e0       	ldi	r22, 0x03	; 3
     91a:	81 e4       	ldi	r24, 0x41	; 65
     91c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	81 e4       	ldi	r24, 0x41	; 65
     924:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     928:	61 e0       	ldi	r22, 0x01	; 1
     92a:	81 e4       	ldi	r24, 0x41	; 65
     92c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     930:	62 e0       	ldi	r22, 0x02	; 2
     932:	81 e4       	ldi	r24, 0x41	; 65
     934:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     938:	84 ef       	ldi	r24, 0xF4	; 244
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     940:	e6 cb       	rjmp	.-2100   	; 0x10e <appstart+0x38>
							case led5:
							LED_off(PORT_A,PIN0);
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	81 e4       	ldi	r24, 0x41	; 65
     946:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     94a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     94e:	63 e0       	ldi	r22, 0x03	; 3
     950:	81 e4       	ldi	r24, 0x41	; 65
     952:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     956:	61 e0       	ldi	r22, 0x01	; 1
     958:	81 e4       	ldi	r24, 0x41	; 65
     95a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     95e:	62 e0       	ldi	r22, 0x02	; 2
     960:	81 e4       	ldi	r24, 0x41	; 65
     962:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     966:	84 ef       	ldi	r24, 0xF4	; 244
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     96e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     972:	63 e0       	ldi	r22, 0x03	; 3
     974:	81 e4       	ldi	r24, 0x41	; 65
     976:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     97a:	61 e0       	ldi	r22, 0x01	; 1
     97c:	81 e4       	ldi	r24, 0x41	; 65
     97e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     982:	62 e0       	ldi	r22, 0x02	; 2
     984:	81 e4       	ldi	r24, 0x41	; 65
     986:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     98a:	84 ef       	ldi	r24, 0xF4	; 244
     98c:	91 e0       	ldi	r25, 0x01	; 1
     98e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     992:	bd cb       	rjmp	.-2182   	; 0x10e <appstart+0x38>
							case led6:
							LED_off(PORT_A,PIN0);
     994:	60 e0       	ldi	r22, 0x00	; 0
     996:	81 e4       	ldi	r24, 0x41	; 65
     998:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     99c:	61 e0       	ldi	r22, 0x01	; 1
     99e:	81 e4       	ldi	r24, 0x41	; 65
     9a0:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     9a4:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     9a8:	63 e0       	ldi	r22, 0x03	; 3
     9aa:	81 e4       	ldi	r24, 0x41	; 65
     9ac:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     9b0:	62 e0       	ldi	r22, 0x02	; 2
     9b2:	81 e4       	ldi	r24, 0x41	; 65
     9b4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     9b8:	84 ef       	ldi	r24, 0xF4	; 244
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     9c0:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     9c4:	63 e0       	ldi	r22, 0x03	; 3
     9c6:	81 e4       	ldi	r24, 0x41	; 65
     9c8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     9cc:	62 e0       	ldi	r22, 0x02	; 2
     9ce:	81 e4       	ldi	r24, 0x41	; 65
     9d0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     9d4:	84 ef       	ldi	r24, 0xF4	; 244
     9d6:	91 e0       	ldi	r25, 0x01	; 1
     9d8:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     9dc:	98 cb       	rjmp	.-2256   	; 0x10e <appstart+0x38>
							case led7:
							LED_off(PORT_A,PIN0);
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	81 e4       	ldi	r24, 0x41	; 65
     9e2:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     9e6:	61 e0       	ldi	r22, 0x01	; 1
     9e8:	81 e4       	ldi	r24, 0x41	; 65
     9ea:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     9ee:	62 e0       	ldi	r22, 0x02	; 2
     9f0:	81 e4       	ldi	r24, 0x41	; 65
     9f2:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     9f6:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     9fa:	63 e0       	ldi	r22, 0x03	; 3
     9fc:	81 e4       	ldi	r24, 0x41	; 65
     9fe:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     a02:	84 ef       	ldi	r24, 0xF4	; 244
     a04:	91 e0       	ldi	r25, 0x01	; 1
     a06:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     a0a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     a0e:	63 e0       	ldi	r22, 0x03	; 3
     a10:	81 e4       	ldi	r24, 0x41	; 65
     a12:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(500);
     a16:	84 ef       	ldi	r24, 0xF4	; 244
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     a1e:	77 cb       	rjmp	.-2322   	; 0x10e <appstart+0x38>
							case led8:
							LED_off(PORT_A,PIN0);
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	81 e4       	ldi	r24, 0x41	; 65
     a24:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     a28:	61 e0       	ldi	r22, 0x01	; 1
     a2a:	81 e4       	ldi	r24, 0x41	; 65
     a2c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     a30:	62 e0       	ldi	r22, 0x02	; 2
     a32:	81 e4       	ldi	r24, 0x41	; 65
     a34:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     a38:	63 e0       	ldi	r22, 0x03	; 3
     a3a:	81 e4       	ldi	r24, 0x41	; 65
     a3c:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     a40:	66 cb       	rjmp	.-2356   	; 0x10e <appstart+0x38>
							
						}
						break;
			case BLINK_5:
						switch(led_number)
     a42:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <led_number>
     a46:	8e 2f       	mov	r24, r30
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	89 30       	cpi	r24, 0x09	; 9
     a4c:	91 05       	cpc	r25, r1
     a4e:	08 f0       	brcs	.+2      	; 0xa52 <__stack+0x1f3>
     a50:	5e cb       	rjmp	.-2372   	; 0x10e <appstart+0x38>
     a52:	fc 01       	movw	r30, r24
     a54:	e2 5b       	subi	r30, 0xB2	; 178
     a56:	ff 4f       	sbci	r31, 0xFF	; 255
     a58:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__tablejump2__>
						{
							case led0:
							LED_off(PORT_A,PIN0);
     a5c:	60 e0       	ldi	r22, 0x00	; 0
     a5e:	81 e4       	ldi	r24, 0x41	; 65
     a60:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     a64:	61 e0       	ldi	r22, 0x01	; 1
     a66:	81 e4       	ldi	r24, 0x41	; 65
     a68:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     a6c:	62 e0       	ldi	r22, 0x02	; 2
     a6e:	81 e4       	ldi	r24, 0x41	; 65
     a70:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     a74:	63 e0       	ldi	r22, 0x03	; 3
     a76:	81 e4       	ldi	r24, 0x41	; 65
     a78:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     a7c:	48 cb       	rjmp	.-2416   	; 0x10e <appstart+0x38>
							case led1:
							set_prescaler();
     a7e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     a82:	60 e0       	ldi	r22, 0x00	; 0
     a84:	81 e4       	ldi	r24, 0x41	; 65
     a86:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     a8a:	80 e2       	ldi	r24, 0x20	; 32
     a8c:	93 e0       	ldi	r25, 0x03	; 3
     a8e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							set_prescaler();
     a92:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN0);
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	81 e4       	ldi	r24, 0x41	; 65
     a9a:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     a9e:	88 ec       	ldi	r24, 0xC8	; 200
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     aa6:	33 cb       	rjmp	.-2458   	; 0x10e <appstart+0x38>
							case led2:
							set_prescaler();
     aa8:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     aac:	61 e0       	ldi	r22, 0x01	; 1
     aae:	81 e4       	ldi	r24, 0x41	; 65
     ab0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     ab4:	60 e0       	ldi	r22, 0x00	; 0
     ab6:	81 e4       	ldi	r24, 0x41	; 65
     ab8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     abc:	80 e2       	ldi	r24, 0x20	; 32
     abe:	93 e0       	ldi	r25, 0x03	; 3
     ac0:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     ac4:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN1);
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	81 e4       	ldi	r24, 0x41	; 65
     acc:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     ad0:	60 e0       	ldi	r22, 0x00	; 0
     ad2:	81 e4       	ldi	r24, 0x41	; 65
     ad4:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     ad8:	88 ec       	ldi	r24, 0xC8	; 200
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     ae0:	16 cb       	rjmp	.-2516   	; 0x10e <appstart+0x38>
							case led3:
							set_prescaler();
     ae2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     ae6:	62 e0       	ldi	r22, 0x02	; 2
     ae8:	81 e4       	ldi	r24, 0x41	; 65
     aea:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     aee:	61 e0       	ldi	r22, 0x01	; 1
     af0:	81 e4       	ldi	r24, 0x41	; 65
     af2:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	81 e4       	ldi	r24, 0x41	; 65
     afa:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     afe:	80 e2       	ldi	r24, 0x20	; 32
     b00:	93 e0       	ldi	r25, 0x03	; 3
     b02:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     b06:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN2);
     b0a:	62 e0       	ldi	r22, 0x02	; 2
     b0c:	81 e4       	ldi	r24, 0x41	; 65
     b0e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     b12:	61 e0       	ldi	r22, 0x01	; 1
     b14:	81 e4       	ldi	r24, 0x41	; 65
     b16:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     b1a:	60 e0       	ldi	r22, 0x00	; 0
     b1c:	81 e4       	ldi	r24, 0x41	; 65
     b1e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     b22:	88 ec       	ldi	r24, 0xC8	; 200
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     b2a:	f1 ca       	rjmp	.-2590   	; 0x10e <appstart+0x38>
							case led4:
							set_prescaler();
     b2c:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     b30:	63 e0       	ldi	r22, 0x03	; 3
     b32:	81 e4       	ldi	r24, 0x41	; 65
     b34:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	81 e4       	ldi	r24, 0x41	; 65
     b3c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     b40:	61 e0       	ldi	r22, 0x01	; 1
     b42:	81 e4       	ldi	r24, 0x41	; 65
     b44:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     b48:	62 e0       	ldi	r22, 0x02	; 2
     b4a:	81 e4       	ldi	r24, 0x41	; 65
     b4c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     b50:	80 e2       	ldi	r24, 0x20	; 32
     b52:	93 e0       	ldi	r25, 0x03	; 3
     b54:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     b58:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     b5c:	63 e0       	ldi	r22, 0x03	; 3
     b5e:	81 e4       	ldi	r24, 0x41	; 65
     b60:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN0);
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	81 e4       	ldi	r24, 0x41	; 65
     b68:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     b6c:	61 e0       	ldi	r22, 0x01	; 1
     b6e:	81 e4       	ldi	r24, 0x41	; 65
     b70:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     b74:	62 e0       	ldi	r22, 0x02	; 2
     b76:	81 e4       	ldi	r24, 0x41	; 65
     b78:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     b7c:	88 ec       	ldi	r24, 0xC8	; 200
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     b84:	c4 ca       	rjmp	.-2680   	; 0x10e <appstart+0x38>
							case led5:
							LED_off(PORT_A,PIN0);
     b86:	60 e0       	ldi	r22, 0x00	; 0
     b88:	81 e4       	ldi	r24, 0x41	; 65
     b8a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     b8e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     b92:	63 e0       	ldi	r22, 0x03	; 3
     b94:	81 e4       	ldi	r24, 0x41	; 65
     b96:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     b9a:	61 e0       	ldi	r22, 0x01	; 1
     b9c:	81 e4       	ldi	r24, 0x41	; 65
     b9e:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     ba2:	62 e0       	ldi	r22, 0x02	; 2
     ba4:	81 e4       	ldi	r24, 0x41	; 65
     ba6:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     baa:	80 e2       	ldi	r24, 0x20	; 32
     bac:	93 e0       	ldi	r25, 0x03	; 3
     bae:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     bb2:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     bb6:	63 e0       	ldi	r22, 0x03	; 3
     bb8:	81 e4       	ldi	r24, 0x41	; 65
     bba:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN1);
     bbe:	61 e0       	ldi	r22, 0x01	; 1
     bc0:	81 e4       	ldi	r24, 0x41	; 65
     bc2:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     bc6:	62 e0       	ldi	r22, 0x02	; 2
     bc8:	81 e4       	ldi	r24, 0x41	; 65
     bca:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     bce:	88 ec       	ldi	r24, 0xC8	; 200
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     bd6:	9b ca       	rjmp	.-2762   	; 0x10e <appstart+0x38>
							case led6:
							LED_off(PORT_A,PIN0);
     bd8:	60 e0       	ldi	r22, 0x00	; 0
     bda:	81 e4       	ldi	r24, 0x41	; 65
     bdc:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     be0:	61 e0       	ldi	r22, 0x01	; 1
     be2:	81 e4       	ldi	r24, 0x41	; 65
     be4:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     be8:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     bec:	63 e0       	ldi	r22, 0x03	; 3
     bee:	81 e4       	ldi	r24, 0x41	; 65
     bf0:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     bf4:	62 e0       	ldi	r22, 0x02	; 2
     bf6:	81 e4       	ldi	r24, 0x41	; 65
     bf8:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     bfc:	80 e2       	ldi	r24, 0x20	; 32
     bfe:	93 e0       	ldi	r25, 0x03	; 3
     c00:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     c04:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     c08:	63 e0       	ldi	r22, 0x03	; 3
     c0a:	81 e4       	ldi	r24, 0x41	; 65
     c0c:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							LED_toggle(PORT_A,PIN2);
     c10:	62 e0       	ldi	r22, 0x02	; 2
     c12:	81 e4       	ldi	r24, 0x41	; 65
     c14:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     c18:	88 ec       	ldi	r24, 0xC8	; 200
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     c20:	76 ca       	rjmp	.-2836   	; 0x10e <appstart+0x38>
							case led7:
							LED_off(PORT_A,PIN0);
     c22:	60 e0       	ldi	r22, 0x00	; 0
     c24:	81 e4       	ldi	r24, 0x41	; 65
     c26:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     c2a:	61 e0       	ldi	r22, 0x01	; 1
     c2c:	81 e4       	ldi	r24, 0x41	; 65
     c2e:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     c32:	62 e0       	ldi	r22, 0x02	; 2
     c34:	81 e4       	ldi	r24, 0x41	; 65
     c36:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							set_prescaler();
     c3a:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     c3e:	63 e0       	ldi	r22, 0x03	; 3
     c40:	81 e4       	ldi	r24, 0x41	; 65
     c42:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(800);
     c46:	80 e2       	ldi	r24, 0x20	; 32
     c48:	93 e0       	ldi	r25, 0x03	; 3
     c4a:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							
							set_prescaler();
     c4e:	0e 94 f8 07 	call	0xff0	; 0xff0 <set_prescaler>
							LED_toggle(PORT_A,PIN3);
     c52:	63 e0       	ldi	r22, 0x03	; 3
     c54:	81 e4       	ldi	r24, 0x41	; 65
     c56:	0e 94 81 06 	call	0xd02	; 0xd02 <LED_toggle>
							delay(200);
     c5a:	88 ec       	ldi	r24, 0xC8	; 200
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 fe 07 	call	0xffc	; 0xffc <delay>
							break;
     c62:	55 ca       	rjmp	.-2902   	; 0x10e <appstart+0x38>
							case led8:
							LED_off(PORT_A,PIN0);
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	81 e4       	ldi	r24, 0x41	; 65
     c68:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN1);
     c6c:	61 e0       	ldi	r22, 0x01	; 1
     c6e:	81 e4       	ldi	r24, 0x41	; 65
     c70:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN2);
     c74:	62 e0       	ldi	r22, 0x02	; 2
     c76:	81 e4       	ldi	r24, 0x41	; 65
     c78:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							LED_off(PORT_A,PIN3);
     c7c:	63 e0       	ldi	r22, 0x03	; 3
     c7e:	81 e4       	ldi	r24, 0x41	; 65
     c80:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <LED_off>
							break;
     c84:	44 ca       	rjmp	.-2936   	; 0x10e <appstart+0x38>

00000c86 <__vector_1>:
						break;
		}
 	}
}
ISR(EXIT_INT_0)
{
     c86:	1f 92       	push	r1
     c88:	0f 92       	push	r0
     c8a:	0f b6       	in	r0, 0x3f	; 63
     c8c:	0f 92       	push	r0
     c8e:	11 24       	eor	r1, r1
     c90:	8f 93       	push	r24
	if (led_number< NUMBER_OF_PRESSED)
     c92:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <led_number>
     c96:	87 30       	cpi	r24, 0x07	; 7
     c98:	20 f4       	brcc	.+8      	; 0xca2 <__vector_1+0x1c>
	{
		led_number++;
     c9a:	8f 5f       	subi	r24, 0xFF	; 255
     c9c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <led_number>
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <__vector_1+0x20>
	}
	else
	{
		led_number=0;
     ca2:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <led_number>
	}
}
     ca6:	8f 91       	pop	r24
     ca8:	0f 90       	pop	r0
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	0f 90       	pop	r0
     cae:	1f 90       	pop	r1
     cb0:	18 95       	reti

00000cb2 <__vector_2>:
ISR(EXIT_INT_1)
{
     cb2:	1f 92       	push	r1
     cb4:	0f 92       	push	r0
     cb6:	0f b6       	in	r0, 0x3f	; 63
     cb8:	0f 92       	push	r0
     cba:	11 24       	eor	r1, r1
     cbc:	8f 93       	push	r24
	if (blink_mode< NUMBER_OF_MODES)
     cbe:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     cc2:	84 30       	cpi	r24, 0x04	; 4
     cc4:	20 f4       	brcc	.+8      	; 0xcce <__vector_2+0x1c>
	{
		blink_mode++;
     cc6:	8f 5f       	subi	r24, 0xFF	; 255
     cc8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <__vector_2+0x20>
	}
	else
	{
		blink_mode=0;
     cce:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
}
     cd2:	8f 91       	pop	r24
     cd4:	0f 90       	pop	r0
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	0f 90       	pop	r0
     cda:	1f 90       	pop	r1
     cdc:	18 95       	reti

00000cde <BUTTON_init>:

#include "button.h"

uint8_t BUTTON_init(uint8_t buttonport ,uint8_t buttonpin)
{
	int res =DIO_init(buttonport,buttonpin,IN);
     cde:	40 e0       	ldi	r20, 0x00	; 0
     ce0:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_init>
	if (res == BUTTON_ERROR_STATE)
     ce4:	81 11       	cpse	r24, r1
	{
		return BUTTON_ERROR_STATE;
	}
		
	return BUTTON_SUCCESS;
     ce6:	81 e0       	ldi	r24, 0x01	; 1
}
     ce8:	08 95       	ret

00000cea <LED_init>:
	if (res == LED_STATE_ERRORSTATE)
	{
		return LED_STATE_ERRORSTATE;
	}
	return LED_STATE_SUCCESS;
}
     cea:	41 e0       	ldi	r20, 0x01	; 1
     cec:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_init>
     cf0:	81 11       	cpse	r24, r1
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	08 95       	ret

00000cf6 <LED_off>:
uint8_t LED_off(uint8_t ledport , uint8_t ledpin)
{
	uint8_t res = DIO_write(ledport,ledpin,LOW);
     cf6:	40 e0       	ldi	r20, 0x00	; 0
     cf8:	0e 94 1d 07 	call	0xe3a	; 0xe3a <DIO_write>
	if (res == LED_STATE_ERRORSTATE)
     cfc:	81 11       	cpse	r24, r1
	{
		return LED_STATE_ERRORSTATE;
	}
	return LED_STATE_SUCCESS;
     cfe:	81 e0       	ldi	r24, 0x01	; 1
}
     d00:	08 95       	ret

00000d02 <LED_toggle>:
uint8_t LED_toggle(uint8_t ledport , uint8_t ledpin)
{
	uint8_t res= DIO_toggle(ledport,ledpin);
     d02:	0e 94 aa 07 	call	0xf54	; 0xf54 <DIO_toggle>
	if (res == LED_STATE_ERRORSTATE)
     d06:	81 11       	cpse	r24, r1
	{
		return LED_STATE_ERRORSTATE;
	}
	return LED_STATE_SUCCESS;
     d08:	81 e0       	ldi	r24, 0x01	; 1
}
     d0a:	08 95       	ret

00000d0c <main>:

int main(void)
{
    /* Replace with your application code */
	
	appstart();
     d0c:	0e 94 6b 00 	call	0xd6	; 0xd6 <appstart>
	
}
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	08 95       	ret

00000d16 <DIO_init>:
// global variable
//function definitions

uint8_t DIO_init(uint8_t portNumber, uint8_t pinNumber, uint8_t direction)
{
	if (pinNumber>7)
     d16:	68 30       	cpi	r22, 0x08	; 8
     d18:	08 f0       	brcs	.+2      	; 0xd1c <DIO_init+0x6>
     d1a:	83 c0       	rjmp	.+262    	; 0xe22 <DIO_init+0x10c>
	{
		return DIOERRORSTATE;
	}
	else
	{
		switch(portNumber)
     d1c:	82 34       	cpi	r24, 0x42	; 66
     d1e:	49 f1       	breq	.+82     	; 0xd72 <DIO_init+0x5c>
     d20:	18 f4       	brcc	.+6      	; 0xd28 <DIO_init+0x12>
     d22:	81 34       	cpi	r24, 0x41	; 65
     d24:	41 f0       	breq	.+16     	; 0xd36 <DIO_init+0x20>
     d26:	7f c0       	rjmp	.+254    	; 0xe26 <DIO_init+0x110>
     d28:	83 34       	cpi	r24, 0x43	; 67
     d2a:	09 f4       	brne	.+2      	; 0xd2e <DIO_init+0x18>
     d2c:	40 c0       	rjmp	.+128    	; 0xdae <DIO_init+0x98>
     d2e:	84 34       	cpi	r24, 0x44	; 68
     d30:	09 f4       	brne	.+2      	; 0xd34 <DIO_init+0x1e>
     d32:	5a c0       	rjmp	.+180    	; 0xde8 <DIO_init+0xd2>
     d34:	78 c0       	rjmp	.+240    	; 0xe26 <DIO_init+0x110>
		{
			case PORT_A:
			if (direction == IN)
     d36:	41 11       	cpse	r20, r1
     d38:	0d c0       	rjmp	.+26     	; 0xd54 <DIO_init+0x3e>
			{
				DDRA &=~(1<<pinNumber);
     d3a:	2a b3       	in	r18, 0x1a	; 26
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	02 c0       	rjmp	.+4      	; 0xd46 <DIO_init+0x30>
     d42:	88 0f       	add	r24, r24
     d44:	99 1f       	adc	r25, r25
     d46:	6a 95       	dec	r22
     d48:	e2 f7       	brpl	.-8      	; 0xd42 <DIO_init+0x2c>
     d4a:	80 95       	com	r24
     d4c:	82 23       	and	r24, r18
     d4e:	8a bb       	out	0x1a, r24	; 26
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	08 95       	ret
			case PORT_A:
			if (direction == IN)
			{
				DDRA &=~(1<<pinNumber);
			}
			else if(direction == OUT)
     d54:	41 30       	cpi	r20, 0x01	; 1
     d56:	09 f0       	breq	.+2      	; 0xd5a <DIO_init+0x44>
     d58:	68 c0       	rjmp	.+208    	; 0xe2a <DIO_init+0x114>
			{
				DDRA |=(1<<pinNumber);
     d5a:	2a b3       	in	r18, 0x1a	; 26
     d5c:	81 e0       	ldi	r24, 0x01	; 1
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	02 c0       	rjmp	.+4      	; 0xd66 <DIO_init+0x50>
     d62:	88 0f       	add	r24, r24
     d64:	99 1f       	adc	r25, r25
     d66:	6a 95       	dec	r22
     d68:	e2 f7       	brpl	.-8      	; 0xd62 <DIO_init+0x4c>
     d6a:	82 2b       	or	r24, r18
     d6c:	8a bb       	out	0x1a, r24	; 26
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	08 95       	ret
			{
				return DIOERRORSTATE;
			}
			break;
			case PORT_B:
			if (direction == IN)
     d72:	41 11       	cpse	r20, r1
     d74:	0d c0       	rjmp	.+26     	; 0xd90 <DIO_init+0x7a>
			{
				DDRB &=~(1<<pinNumber);
     d76:	27 b3       	in	r18, 0x17	; 23
     d78:	81 e0       	ldi	r24, 0x01	; 1
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <DIO_init+0x6c>
     d7e:	88 0f       	add	r24, r24
     d80:	99 1f       	adc	r25, r25
     d82:	6a 95       	dec	r22
     d84:	e2 f7       	brpl	.-8      	; 0xd7e <DIO_init+0x68>
     d86:	80 95       	com	r24
     d88:	82 23       	and	r24, r18
     d8a:	87 bb       	out	0x17, r24	; 23
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	08 95       	ret
			case PORT_B:
			if (direction == IN)
			{
				DDRB &=~(1<<pinNumber);
			}
			else if(direction == OUT)
     d90:	41 30       	cpi	r20, 0x01	; 1
     d92:	09 f0       	breq	.+2      	; 0xd96 <DIO_init+0x80>
     d94:	4c c0       	rjmp	.+152    	; 0xe2e <DIO_init+0x118>
			{
				DDRB |=(1<<pinNumber);
     d96:	27 b3       	in	r18, 0x17	; 23
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <DIO_init+0x8c>
     d9e:	88 0f       	add	r24, r24
     da0:	99 1f       	adc	r25, r25
     da2:	6a 95       	dec	r22
     da4:	e2 f7       	brpl	.-8      	; 0xd9e <DIO_init+0x88>
     da6:	82 2b       	or	r24, r18
     da8:	87 bb       	out	0x17, r24	; 23
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	08 95       	ret
			{
				return DIOERRORSTATE;
			}
			break;
			case PORT_C:
			if (direction == IN)
     dae:	41 11       	cpse	r20, r1
     db0:	0d c0       	rjmp	.+26     	; 0xdcc <DIO_init+0xb6>
			{
				DDRC &=~(1<<pinNumber);
     db2:	24 b3       	in	r18, 0x14	; 20
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <DIO_init+0xa8>
     dba:	88 0f       	add	r24, r24
     dbc:	99 1f       	adc	r25, r25
     dbe:	6a 95       	dec	r22
     dc0:	e2 f7       	brpl	.-8      	; 0xdba <DIO_init+0xa4>
     dc2:	80 95       	com	r24
     dc4:	82 23       	and	r24, r18
     dc6:	84 bb       	out	0x14, r24	; 20
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	08 95       	ret
			case PORT_C:
			if (direction == IN)
			{
				DDRC &=~(1<<pinNumber);
			}
			else if(direction == OUT)
     dcc:	41 30       	cpi	r20, 0x01	; 1
     dce:	89 f5       	brne	.+98     	; 0xe32 <DIO_init+0x11c>
			{
				DDRC |=(1<<pinNumber);
     dd0:	24 b3       	in	r18, 0x14	; 20
     dd2:	81 e0       	ldi	r24, 0x01	; 1
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <DIO_init+0xc6>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	6a 95       	dec	r22
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <DIO_init+0xc2>
     de0:	82 2b       	or	r24, r18
     de2:	84 bb       	out	0x14, r24	; 20
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	08 95       	ret
			{
				return DIOERRORSTATE;
			}
			break;
			case PORT_D:
			if (direction == IN)
     de8:	41 11       	cpse	r20, r1
     dea:	0d c0       	rjmp	.+26     	; 0xe06 <DIO_init+0xf0>
			{
				DDRD &=~(1<<pinNumber);
     dec:	21 b3       	in	r18, 0x11	; 17
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <DIO_init+0xe2>
     df4:	88 0f       	add	r24, r24
     df6:	99 1f       	adc	r25, r25
     df8:	6a 95       	dec	r22
     dfa:	e2 f7       	brpl	.-8      	; 0xdf4 <DIO_init+0xde>
     dfc:	80 95       	com	r24
     dfe:	82 23       	and	r24, r18
     e00:	81 bb       	out	0x11, r24	; 17
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	08 95       	ret
			case PORT_D:
			if (direction == IN)
			{
				DDRD &=~(1<<pinNumber);
			}
			else if(direction == OUT)
     e06:	41 30       	cpi	r20, 0x01	; 1
     e08:	b1 f4       	brne	.+44     	; 0xe36 <DIO_init+0x120>
			{
				DDRD |=(1<<pinNumber);
     e0a:	21 b3       	in	r18, 0x11	; 17
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	02 c0       	rjmp	.+4      	; 0xe16 <DIO_init+0x100>
     e12:	88 0f       	add	r24, r24
     e14:	99 1f       	adc	r25, r25
     e16:	6a 95       	dec	r22
     e18:	e2 f7       	brpl	.-8      	; 0xe12 <DIO_init+0xfc>
     e1a:	82 2b       	or	r24, r18
     e1c:	81 bb       	out	0x11, r24	; 17
			}
			break;
			default:
			return DIOERRORSTATE;
		}
		return SUCCESS;
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	08 95       	ret

uint8_t DIO_init(uint8_t portNumber, uint8_t pinNumber, uint8_t direction)
{
	if (pinNumber>7)
	{
		return DIOERRORSTATE;
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	08 95       	ret
			{
				return DIOERRORSTATE;
			}
			break;
			default:
			return DIOERRORSTATE;
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	08 95       	ret
			{
				DDRA |=(1<<pinNumber);
			}
			else
			{
				return DIOERRORSTATE;
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	08 95       	ret
			{
				DDRB |=(1<<pinNumber);
			}
			else
			{
				return DIOERRORSTATE;
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	08 95       	ret
			{
				DDRC |=(1<<pinNumber);
			}
			else
			{
				return DIOERRORSTATE;
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	08 95       	ret
			{
				DDRD |=(1<<pinNumber);
			}
			else
			{
				return DIOERRORSTATE;
     e36:	80 e0       	ldi	r24, 0x00	; 0
			return DIOERRORSTATE;
		}
		return SUCCESS;
	}

}
     e38:	08 95       	ret

00000e3a <DIO_write>:

uint8_t DIO_write(uint8_t portNumber, uint8_t pinNumber, uint8_t value)
{
	switch(portNumber)
     e3a:	82 34       	cpi	r24, 0x42	; 66
     e3c:	49 f1       	breq	.+82     	; 0xe90 <DIO_write+0x56>
     e3e:	18 f4       	brcc	.+6      	; 0xe46 <DIO_write+0xc>
     e40:	81 34       	cpi	r24, 0x41	; 65
     e42:	41 f0       	breq	.+16     	; 0xe54 <DIO_write+0x1a>
     e44:	7d c0       	rjmp	.+250    	; 0xf40 <DIO_write+0x106>
     e46:	83 34       	cpi	r24, 0x43	; 67
     e48:	09 f4       	brne	.+2      	; 0xe4c <DIO_write+0x12>
     e4a:	40 c0       	rjmp	.+128    	; 0xecc <DIO_write+0x92>
     e4c:	84 34       	cpi	r24, 0x44	; 68
     e4e:	09 f4       	brne	.+2      	; 0xe52 <DIO_write+0x18>
     e50:	5a c0       	rjmp	.+180    	; 0xf06 <DIO_write+0xcc>
     e52:	76 c0       	rjmp	.+236    	; 0xf40 <DIO_write+0x106>
	{
		case PORT_A:
		if (value == LOW)
     e54:	41 11       	cpse	r20, r1
     e56:	0d c0       	rjmp	.+26     	; 0xe72 <DIO_write+0x38>
		{
			PORTA &=~(1<<pinNumber); // write 0
     e58:	2b b3       	in	r18, 0x1b	; 27
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <DIO_write+0x2a>
     e60:	88 0f       	add	r24, r24
     e62:	99 1f       	adc	r25, r25
     e64:	6a 95       	dec	r22
     e66:	e2 f7       	brpl	.-8      	; 0xe60 <DIO_write+0x26>
     e68:	80 95       	com	r24
     e6a:	82 23       	and	r24, r18
     e6c:	8b bb       	out	0x1b, r24	; 27
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	08 95       	ret
		case PORT_A:
		if (value == LOW)
		{
			PORTA &=~(1<<pinNumber); // write 0
		}
		else if(value == HIGH)
     e72:	41 30       	cpi	r20, 0x01	; 1
     e74:	09 f0       	breq	.+2      	; 0xe78 <DIO_write+0x3e>
     e76:	66 c0       	rjmp	.+204    	; 0xf44 <DIO_write+0x10a>
		{
			PORTA |=(1<<pinNumber); // write 1
     e78:	2b b3       	in	r18, 0x1b	; 27
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <DIO_write+0x4a>
     e80:	88 0f       	add	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	6a 95       	dec	r22
     e86:	e2 f7       	brpl	.-8      	; 0xe80 <DIO_write+0x46>
     e88:	82 2b       	or	r24, r18
     e8a:	8b bb       	out	0x1b, r24	; 27
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	08 95       	ret
		{
			return DIOERRORSTATE;
		}
		break;
		case PORT_B:
		if (value == LOW)
     e90:	41 11       	cpse	r20, r1
     e92:	0d c0       	rjmp	.+26     	; 0xeae <DIO_write+0x74>
		{
			PORTB &=~(1<<pinNumber);
     e94:	28 b3       	in	r18, 0x18	; 24
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <DIO_write+0x66>
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	6a 95       	dec	r22
     ea2:	e2 f7       	brpl	.-8      	; 0xe9c <DIO_write+0x62>
     ea4:	80 95       	com	r24
     ea6:	82 23       	and	r24, r18
     ea8:	88 bb       	out	0x18, r24	; 24
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	08 95       	ret
		case PORT_B:
		if (value == LOW)
		{
			PORTB &=~(1<<pinNumber);
		}
		else if(value == HIGH)
     eae:	41 30       	cpi	r20, 0x01	; 1
     eb0:	09 f0       	breq	.+2      	; 0xeb4 <DIO_write+0x7a>
     eb2:	4a c0       	rjmp	.+148    	; 0xf48 <DIO_write+0x10e>
		{
			PORTB |=(1<<pinNumber);
     eb4:	28 b3       	in	r18, 0x18	; 24
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	02 c0       	rjmp	.+4      	; 0xec0 <DIO_write+0x86>
     ebc:	88 0f       	add	r24, r24
     ebe:	99 1f       	adc	r25, r25
     ec0:	6a 95       	dec	r22
     ec2:	e2 f7       	brpl	.-8      	; 0xebc <DIO_write+0x82>
     ec4:	82 2b       	or	r24, r18
     ec6:	88 bb       	out	0x18, r24	; 24
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     ec8:	81 e0       	ldi	r24, 0x01	; 1
     eca:	08 95       	ret
		{
			return DIOERRORSTATE;
		}
		break;
		case PORT_C:
		if (value == LOW)
     ecc:	41 11       	cpse	r20, r1
     ece:	0d c0       	rjmp	.+26     	; 0xeea <DIO_write+0xb0>
		{
			PORTC &=~(1<<pinNumber);
     ed0:	25 b3       	in	r18, 0x15	; 21
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	02 c0       	rjmp	.+4      	; 0xedc <DIO_write+0xa2>
     ed8:	88 0f       	add	r24, r24
     eda:	99 1f       	adc	r25, r25
     edc:	6a 95       	dec	r22
     ede:	e2 f7       	brpl	.-8      	; 0xed8 <DIO_write+0x9e>
     ee0:	80 95       	com	r24
     ee2:	82 23       	and	r24, r18
     ee4:	85 bb       	out	0x15, r24	; 21
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	08 95       	ret
		case PORT_C:
		if (value == LOW)
		{
			PORTC &=~(1<<pinNumber);
		}
		else if(value == HIGH)
     eea:	41 30       	cpi	r20, 0x01	; 1
     eec:	79 f5       	brne	.+94     	; 0xf4c <DIO_write+0x112>
		{
			PORTC |=(1<<pinNumber);
     eee:	25 b3       	in	r18, 0x15	; 21
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <DIO_write+0xc0>
     ef6:	88 0f       	add	r24, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	6a 95       	dec	r22
     efc:	e2 f7       	brpl	.-8      	; 0xef6 <DIO_write+0xbc>
     efe:	82 2b       	or	r24, r18
     f00:	85 bb       	out	0x15, r24	; 21
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	08 95       	ret
		{
			return DIOERRORSTATE;
		}
		break;
		case PORT_D:
		if (value == LOW)
     f06:	41 11       	cpse	r20, r1
     f08:	0d c0       	rjmp	.+26     	; 0xf24 <DIO_write+0xea>
		{
			PORTD &=~(1<<pinNumber);
     f0a:	22 b3       	in	r18, 0x12	; 18
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <DIO_write+0xdc>
     f12:	88 0f       	add	r24, r24
     f14:	99 1f       	adc	r25, r25
     f16:	6a 95       	dec	r22
     f18:	e2 f7       	brpl	.-8      	; 0xf12 <DIO_write+0xd8>
     f1a:	80 95       	com	r24
     f1c:	82 23       	and	r24, r18
     f1e:	82 bb       	out	0x12, r24	; 18
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	08 95       	ret
		case PORT_D:
		if (value == LOW)
		{
			PORTD &=~(1<<pinNumber);
		}
		else if(value == HIGH)
     f24:	41 30       	cpi	r20, 0x01	; 1
     f26:	a1 f4       	brne	.+40     	; 0xf50 <DIO_write+0x116>
		{
			PORTD |=(1<<pinNumber);
     f28:	22 b3       	in	r18, 0x12	; 18
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <DIO_write+0xfa>
     f30:	88 0f       	add	r24, r24
     f32:	99 1f       	adc	r25, r25
     f34:	6a 95       	dec	r22
     f36:	e2 f7       	brpl	.-8      	; 0xf30 <DIO_write+0xf6>
     f38:	82 2b       	or	r24, r18
     f3a:	82 bb       	out	0x12, r24	; 18
		break;
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	08 95       	ret
		{
			return DIOERRORSTATE;
		}
		break;
		default:
		return DIOERRORSTATE;
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	08 95       	ret
		{
			PORTA |=(1<<pinNumber); // write 1
		}
		else
		{
			return DIOERRORSTATE;
     f44:	80 e0       	ldi	r24, 0x00	; 0
     f46:	08 95       	ret
		{
			PORTB |=(1<<pinNumber);
		}
		else
		{
			return DIOERRORSTATE;
     f48:	80 e0       	ldi	r24, 0x00	; 0
     f4a:	08 95       	ret
		{
			PORTC |=(1<<pinNumber);
		}
		else
		{
			return DIOERRORSTATE;
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	08 95       	ret
		{
			PORTD |=(1<<pinNumber);
		}
		else
		{
			return DIOERRORSTATE;
     f50:	80 e0       	ldi	r24, 0x00	; 0
		default:
		return DIOERRORSTATE;

	}
	return SUCCESS;
}
     f52:	08 95       	ret

00000f54 <DIO_toggle>:

uint8_t DIO_toggle(uint8_t portNumber, uint8_t pinNumber)
{
	switch(portNumber)
     f54:	82 34       	cpi	r24, 0x42	; 66
     f56:	a9 f0       	breq	.+42     	; 0xf82 <DIO_toggle+0x2e>
     f58:	18 f4       	brcc	.+6      	; 0xf60 <DIO_toggle+0xc>
     f5a:	81 34       	cpi	r24, 0x41	; 65
     f5c:	31 f0       	breq	.+12     	; 0xf6a <DIO_toggle+0x16>
     f5e:	35 c0       	rjmp	.+106    	; 0xfca <DIO_toggle+0x76>
     f60:	83 34       	cpi	r24, 0x43	; 67
     f62:	d9 f0       	breq	.+54     	; 0xf9a <DIO_toggle+0x46>
     f64:	84 34       	cpi	r24, 0x44	; 68
     f66:	29 f1       	breq	.+74     	; 0xfb2 <DIO_toggle+0x5e>
     f68:	30 c0       	rjmp	.+96     	; 0xfca <DIO_toggle+0x76>
	{
		case PORT_A:
		PORTA ^=(1<<pinNumber);
     f6a:	2b b3       	in	r18, 0x1b	; 27
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <DIO_toggle+0x22>
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	6a 95       	dec	r22
     f78:	e2 f7       	brpl	.-8      	; 0xf72 <DIO_toggle+0x1e>
     f7a:	82 27       	eor	r24, r18
     f7c:	8b bb       	out	0x1b, r24	; 27
		break;
		default:
		return DIOERRORSTATE;
		
	}
	return SUCCESS;
     f7e:	81 e0       	ldi	r24, 0x01	; 1
{
	switch(portNumber)
	{
		case PORT_A:
		PORTA ^=(1<<pinNumber);
		break;
     f80:	08 95       	ret
		case PORT_B:
		PORTB ^=(1<<pinNumber);
     f82:	28 b3       	in	r18, 0x18	; 24
     f84:	81 e0       	ldi	r24, 0x01	; 1
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <DIO_toggle+0x3a>
     f8a:	88 0f       	add	r24, r24
     f8c:	99 1f       	adc	r25, r25
     f8e:	6a 95       	dec	r22
     f90:	e2 f7       	brpl	.-8      	; 0xf8a <DIO_toggle+0x36>
     f92:	82 27       	eor	r24, r18
     f94:	88 bb       	out	0x18, r24	; 24
		break;
		default:
		return DIOERRORSTATE;
		
	}
	return SUCCESS;
     f96:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_A:
		PORTA ^=(1<<pinNumber);
		break;
		case PORT_B:
		PORTB ^=(1<<pinNumber);
		break;
     f98:	08 95       	ret
		case PORT_C:
		PORTC ^=(1<<pinNumber);
     f9a:	25 b3       	in	r18, 0x15	; 21
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <DIO_toggle+0x52>
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	6a 95       	dec	r22
     fa8:	e2 f7       	brpl	.-8      	; 0xfa2 <DIO_toggle+0x4e>
     faa:	82 27       	eor	r24, r18
     fac:	85 bb       	out	0x15, r24	; 21
		break;
		default:
		return DIOERRORSTATE;
		
	}
	return SUCCESS;
     fae:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_B:
		PORTB ^=(1<<pinNumber);
		break;
		case PORT_C:
		PORTC ^=(1<<pinNumber);
		break;
     fb0:	08 95       	ret
		case PORT_D:
		PORTD ^=(1<<pinNumber);
     fb2:	22 b3       	in	r18, 0x12	; 18
     fb4:	81 e0       	ldi	r24, 0x01	; 1
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <DIO_toggle+0x6a>
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	6a 95       	dec	r22
     fc0:	e2 f7       	brpl	.-8      	; 0xfba <DIO_toggle+0x66>
     fc2:	82 27       	eor	r24, r18
     fc4:	82 bb       	out	0x12, r24	; 18
		break;
		default:
		return DIOERRORSTATE;
		
	}
	return SUCCESS;
     fc6:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_C:
		PORTC ^=(1<<pinNumber);
		break;
		case PORT_D:
		PORTD ^=(1<<pinNumber);
		break;
     fc8:	08 95       	ret
		default:
		return DIOERRORSTATE;
     fca:	80 e0       	ldi	r24, 0x00	; 0
		
	}
	return SUCCESS;
}
     fcc:	08 95       	ret

00000fce <init_interrupt>:
 */ 
#include "interrupt.h"
#include "../registers.h"
void init_interrupt(void)
{
	sei();
     fce:	78 94       	sei
	MCUCR |= (1<<ISC00) |(1<<ISC01);
     fd0:	85 b7       	in	r24, 0x35	; 53
     fd2:	83 60       	ori	r24, 0x03	; 3
     fd4:	85 bf       	out	0x35, r24	; 53
	GICR |=(1<<INT0);
     fd6:	8b b7       	in	r24, 0x3b	; 59
     fd8:	80 64       	ori	r24, 0x40	; 64
     fda:	8b bf       	out	0x3b, r24	; 59
	
	MCUCR |= (1<<ISC10) |(1<<ISC11);
     fdc:	85 b7       	in	r24, 0x35	; 53
     fde:	8c 60       	ori	r24, 0x0C	; 12
     fe0:	85 bf       	out	0x35, r24	; 53
	GICR |=(1<<INT1);
     fe2:	8b b7       	in	r24, 0x3b	; 59
     fe4:	80 68       	ori	r24, 0x80	; 128
     fe6:	8b bf       	out	0x3b, r24	; 59
     fe8:	08 95       	ret

00000fea <init_timer>:
#include "../registers.h"
#include <math.h>
void init_timer(void)
{
	//choose mode
	TCCR0 = 0x00; // normal mode
     fea:	13 be       	out	0x33, r1	; 51
	//timer set initial value
	TCNT0 = 0x00;
     fec:	12 be       	out	0x32, r1	; 50
     fee:	08 95       	ret

00000ff0 <set_prescaler>:
}

void set_prescaler(void)
{
	//timer start -> setting clock source
	TCCR0 |= (1<<0); //(he choose no prescaler)
     ff0:	83 b7       	in	r24, 0x33	; 51
     ff2:	81 60       	ori	r24, 0x01	; 1
     ff4:	83 bf       	out	0x33, r24	; 51
     ff6:	08 95       	ret

00000ff8 <stop_timer>:
}

void stop_timer(void)
{
	//timer stop
	TCCR0 = 0x00;
     ff8:	13 be       	out	0x33, r1	; 51
     ffa:	08 95       	ret

00000ffc <delay>:

void delay(int timer_delay)
{
	unsigned int overflowcounter=0;
	int number_of_flows=0;
	number_of_flows=(timer_delay*pow(10,-3))/(256*pow(10,-6));
     ffc:	bc 01       	movw	r22, r24
     ffe:	99 0f       	add	r25, r25
    1000:	88 0b       	sbc	r24, r24
    1002:	99 0b       	sbc	r25, r25
    1004:	0e 94 cd 08 	call	0x119a	; 0x119a <__floatsisf>
    1008:	2f e6       	ldi	r18, 0x6F	; 111
    100a:	32 e1       	ldi	r19, 0x12	; 18
    100c:	43 e8       	ldi	r20, 0x83	; 131
    100e:	5a e3       	ldi	r21, 0x3A	; 58
    1010:	0e 94 59 09 	call	0x12b2	; 0x12b2 <__mulsf3>
    1014:	2d eb       	ldi	r18, 0xBD	; 189
    1016:	37 e3       	ldi	r19, 0x37	; 55
    1018:	46 e8       	ldi	r20, 0x86	; 134
    101a:	59 e3       	ldi	r21, 0x39	; 57
    101c:	0e 94 23 08 	call	0x1046	; 0x1046 <__divsf3>
    1020:	0e 94 95 08 	call	0x112a	; 0x112a <__fixsfsi>
	TCCR0 = 0x00;
}

void delay(int timer_delay)
{
	unsigned int overflowcounter=0;
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	30 e0       	ldi	r19, 0x00	; 0
	int number_of_flows=0;
	number_of_flows=(timer_delay*pow(10,-3))/(256*pow(10,-6));
	while(overflowcounter < number_of_flows)
    1028:	08 c0       	rjmp	.+16     	; 0x103a <delay+0x3e>
	{
		//will be repeated 2000 times
		//stop after one overflow -> 256 micro second
		//wait until the overflow flag to be set
		while((TIFR &(1<<0)) == 0);
    102a:	08 b6       	in	r0, 0x38	; 56
    102c:	00 fe       	sbrs	r0, 0
    102e:	fd cf       	rjmp	.-6      	; 0x102a <delay+0x2e>
						
		//clear overflow flag
		TIFR |= (1<<0);
    1030:	88 b7       	in	r24, 0x38	; 56
    1032:	81 60       	ori	r24, 0x01	; 1
    1034:	88 bf       	out	0x38, r24	; 56
						
		overflowcounter++;
    1036:	2f 5f       	subi	r18, 0xFF	; 255
    1038:	3f 4f       	sbci	r19, 0xFF	; 255
void delay(int timer_delay)
{
	unsigned int overflowcounter=0;
	int number_of_flows=0;
	number_of_flows=(timer_delay*pow(10,-3))/(256*pow(10,-6));
	while(overflowcounter < number_of_flows)
    103a:	26 17       	cp	r18, r22
    103c:	37 07       	cpc	r19, r23
    103e:	a8 f3       	brcs	.-22     	; 0x102a <delay+0x2e>
		TIFR |= (1<<0);
						
		overflowcounter++;
	}
	overflowcounter =0;
	stop_timer();
    1040:	0e 94 fc 07 	call	0xff8	; 0xff8 <stop_timer>
    1044:	08 95       	ret

00001046 <__divsf3>:
    1046:	0e 94 37 08 	call	0x106e	; 0x106e <__divsf3x>
    104a:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__fp_round>
    104e:	0e 94 18 09 	call	0x1230	; 0x1230 <__fp_pscB>
    1052:	58 f0       	brcs	.+22     	; 0x106a <__divsf3+0x24>
    1054:	0e 94 11 09 	call	0x1222	; 0x1222 <__fp_pscA>
    1058:	40 f0       	brcs	.+16     	; 0x106a <__divsf3+0x24>
    105a:	29 f4       	brne	.+10     	; 0x1066 <__divsf3+0x20>
    105c:	5f 3f       	cpi	r21, 0xFF	; 255
    105e:	29 f0       	breq	.+10     	; 0x106a <__divsf3+0x24>
    1060:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__fp_inf>
    1064:	51 11       	cpse	r21, r1
    1066:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__fp_szero>
    106a:	0c 94 0e 09 	jmp	0x121c	; 0x121c <__fp_nan>

0000106e <__divsf3x>:
    106e:	0e 94 30 09 	call	0x1260	; 0x1260 <__fp_split3>
    1072:	68 f3       	brcs	.-38     	; 0x104e <__divsf3+0x8>

00001074 <__divsf3_pse>:
    1074:	99 23       	and	r25, r25
    1076:	b1 f3       	breq	.-20     	; 0x1064 <__divsf3+0x1e>
    1078:	55 23       	and	r21, r21
    107a:	91 f3       	breq	.-28     	; 0x1060 <__divsf3+0x1a>
    107c:	95 1b       	sub	r25, r21
    107e:	55 0b       	sbc	r21, r21
    1080:	bb 27       	eor	r27, r27
    1082:	aa 27       	eor	r26, r26
    1084:	62 17       	cp	r22, r18
    1086:	73 07       	cpc	r23, r19
    1088:	84 07       	cpc	r24, r20
    108a:	38 f0       	brcs	.+14     	; 0x109a <__divsf3_pse+0x26>
    108c:	9f 5f       	subi	r25, 0xFF	; 255
    108e:	5f 4f       	sbci	r21, 0xFF	; 255
    1090:	22 0f       	add	r18, r18
    1092:	33 1f       	adc	r19, r19
    1094:	44 1f       	adc	r20, r20
    1096:	aa 1f       	adc	r26, r26
    1098:	a9 f3       	breq	.-22     	; 0x1084 <__divsf3_pse+0x10>
    109a:	35 d0       	rcall	.+106    	; 0x1106 <__divsf3_pse+0x92>
    109c:	0e 2e       	mov	r0, r30
    109e:	3a f0       	brmi	.+14     	; 0x10ae <__divsf3_pse+0x3a>
    10a0:	e0 e8       	ldi	r30, 0x80	; 128
    10a2:	32 d0       	rcall	.+100    	; 0x1108 <__divsf3_pse+0x94>
    10a4:	91 50       	subi	r25, 0x01	; 1
    10a6:	50 40       	sbci	r21, 0x00	; 0
    10a8:	e6 95       	lsr	r30
    10aa:	00 1c       	adc	r0, r0
    10ac:	ca f7       	brpl	.-14     	; 0x10a0 <__divsf3_pse+0x2c>
    10ae:	2b d0       	rcall	.+86     	; 0x1106 <__divsf3_pse+0x92>
    10b0:	fe 2f       	mov	r31, r30
    10b2:	29 d0       	rcall	.+82     	; 0x1106 <__divsf3_pse+0x92>
    10b4:	66 0f       	add	r22, r22
    10b6:	77 1f       	adc	r23, r23
    10b8:	88 1f       	adc	r24, r24
    10ba:	bb 1f       	adc	r27, r27
    10bc:	26 17       	cp	r18, r22
    10be:	37 07       	cpc	r19, r23
    10c0:	48 07       	cpc	r20, r24
    10c2:	ab 07       	cpc	r26, r27
    10c4:	b0 e8       	ldi	r27, 0x80	; 128
    10c6:	09 f0       	breq	.+2      	; 0x10ca <__divsf3_pse+0x56>
    10c8:	bb 0b       	sbc	r27, r27
    10ca:	80 2d       	mov	r24, r0
    10cc:	bf 01       	movw	r22, r30
    10ce:	ff 27       	eor	r31, r31
    10d0:	93 58       	subi	r25, 0x83	; 131
    10d2:	5f 4f       	sbci	r21, 0xFF	; 255
    10d4:	3a f0       	brmi	.+14     	; 0x10e4 <__divsf3_pse+0x70>
    10d6:	9e 3f       	cpi	r25, 0xFE	; 254
    10d8:	51 05       	cpc	r21, r1
    10da:	78 f0       	brcs	.+30     	; 0x10fa <__divsf3_pse+0x86>
    10dc:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__fp_inf>
    10e0:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__fp_szero>
    10e4:	5f 3f       	cpi	r21, 0xFF	; 255
    10e6:	e4 f3       	brlt	.-8      	; 0x10e0 <__divsf3_pse+0x6c>
    10e8:	98 3e       	cpi	r25, 0xE8	; 232
    10ea:	d4 f3       	brlt	.-12     	; 0x10e0 <__divsf3_pse+0x6c>
    10ec:	86 95       	lsr	r24
    10ee:	77 95       	ror	r23
    10f0:	67 95       	ror	r22
    10f2:	b7 95       	ror	r27
    10f4:	f7 95       	ror	r31
    10f6:	9f 5f       	subi	r25, 0xFF	; 255
    10f8:	c9 f7       	brne	.-14     	; 0x10ec <__divsf3_pse+0x78>
    10fa:	88 0f       	add	r24, r24
    10fc:	91 1d       	adc	r25, r1
    10fe:	96 95       	lsr	r25
    1100:	87 95       	ror	r24
    1102:	97 f9       	bld	r25, 7
    1104:	08 95       	ret
    1106:	e1 e0       	ldi	r30, 0x01	; 1
    1108:	66 0f       	add	r22, r22
    110a:	77 1f       	adc	r23, r23
    110c:	88 1f       	adc	r24, r24
    110e:	bb 1f       	adc	r27, r27
    1110:	62 17       	cp	r22, r18
    1112:	73 07       	cpc	r23, r19
    1114:	84 07       	cpc	r24, r20
    1116:	ba 07       	cpc	r27, r26
    1118:	20 f0       	brcs	.+8      	; 0x1122 <__divsf3_pse+0xae>
    111a:	62 1b       	sub	r22, r18
    111c:	73 0b       	sbc	r23, r19
    111e:	84 0b       	sbc	r24, r20
    1120:	ba 0b       	sbc	r27, r26
    1122:	ee 1f       	adc	r30, r30
    1124:	88 f7       	brcc	.-30     	; 0x1108 <__divsf3_pse+0x94>
    1126:	e0 95       	com	r30
    1128:	08 95       	ret

0000112a <__fixsfsi>:
    112a:	0e 94 9c 08 	call	0x1138	; 0x1138 <__fixunssfsi>
    112e:	68 94       	set
    1130:	b1 11       	cpse	r27, r1
    1132:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__fp_szero>
    1136:	08 95       	ret

00001138 <__fixunssfsi>:
    1138:	0e 94 38 09 	call	0x1270	; 0x1270 <__fp_splitA>
    113c:	88 f0       	brcs	.+34     	; 0x1160 <__fixunssfsi+0x28>
    113e:	9f 57       	subi	r25, 0x7F	; 127
    1140:	98 f0       	brcs	.+38     	; 0x1168 <__fixunssfsi+0x30>
    1142:	b9 2f       	mov	r27, r25
    1144:	99 27       	eor	r25, r25
    1146:	b7 51       	subi	r27, 0x17	; 23
    1148:	b0 f0       	brcs	.+44     	; 0x1176 <__fixunssfsi+0x3e>
    114a:	e1 f0       	breq	.+56     	; 0x1184 <__fixunssfsi+0x4c>
    114c:	66 0f       	add	r22, r22
    114e:	77 1f       	adc	r23, r23
    1150:	88 1f       	adc	r24, r24
    1152:	99 1f       	adc	r25, r25
    1154:	1a f0       	brmi	.+6      	; 0x115c <__fixunssfsi+0x24>
    1156:	ba 95       	dec	r27
    1158:	c9 f7       	brne	.-14     	; 0x114c <__fixunssfsi+0x14>
    115a:	14 c0       	rjmp	.+40     	; 0x1184 <__fixunssfsi+0x4c>
    115c:	b1 30       	cpi	r27, 0x01	; 1
    115e:	91 f0       	breq	.+36     	; 0x1184 <__fixunssfsi+0x4c>
    1160:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fp_zero>
    1164:	b1 e0       	ldi	r27, 0x01	; 1
    1166:	08 95       	ret
    1168:	0c 94 52 09 	jmp	0x12a4	; 0x12a4 <__fp_zero>
    116c:	67 2f       	mov	r22, r23
    116e:	78 2f       	mov	r23, r24
    1170:	88 27       	eor	r24, r24
    1172:	b8 5f       	subi	r27, 0xF8	; 248
    1174:	39 f0       	breq	.+14     	; 0x1184 <__fixunssfsi+0x4c>
    1176:	b9 3f       	cpi	r27, 0xF9	; 249
    1178:	cc f3       	brlt	.-14     	; 0x116c <__fixunssfsi+0x34>
    117a:	86 95       	lsr	r24
    117c:	77 95       	ror	r23
    117e:	67 95       	ror	r22
    1180:	b3 95       	inc	r27
    1182:	d9 f7       	brne	.-10     	; 0x117a <__fixunssfsi+0x42>
    1184:	3e f4       	brtc	.+14     	; 0x1194 <__fixunssfsi+0x5c>
    1186:	90 95       	com	r25
    1188:	80 95       	com	r24
    118a:	70 95       	com	r23
    118c:	61 95       	neg	r22
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	8f 4f       	sbci	r24, 0xFF	; 255
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	08 95       	ret

00001196 <__floatunsisf>:
    1196:	e8 94       	clt
    1198:	09 c0       	rjmp	.+18     	; 0x11ac <__floatsisf+0x12>

0000119a <__floatsisf>:
    119a:	97 fb       	bst	r25, 7
    119c:	3e f4       	brtc	.+14     	; 0x11ac <__floatsisf+0x12>
    119e:	90 95       	com	r25
    11a0:	80 95       	com	r24
    11a2:	70 95       	com	r23
    11a4:	61 95       	neg	r22
    11a6:	7f 4f       	sbci	r23, 0xFF	; 255
    11a8:	8f 4f       	sbci	r24, 0xFF	; 255
    11aa:	9f 4f       	sbci	r25, 0xFF	; 255
    11ac:	99 23       	and	r25, r25
    11ae:	a9 f0       	breq	.+42     	; 0x11da <__floatsisf+0x40>
    11b0:	f9 2f       	mov	r31, r25
    11b2:	96 e9       	ldi	r25, 0x96	; 150
    11b4:	bb 27       	eor	r27, r27
    11b6:	93 95       	inc	r25
    11b8:	f6 95       	lsr	r31
    11ba:	87 95       	ror	r24
    11bc:	77 95       	ror	r23
    11be:	67 95       	ror	r22
    11c0:	b7 95       	ror	r27
    11c2:	f1 11       	cpse	r31, r1
    11c4:	f8 cf       	rjmp	.-16     	; 0x11b6 <__floatsisf+0x1c>
    11c6:	fa f4       	brpl	.+62     	; 0x1206 <__floatsisf+0x6c>
    11c8:	bb 0f       	add	r27, r27
    11ca:	11 f4       	brne	.+4      	; 0x11d0 <__floatsisf+0x36>
    11cc:	60 ff       	sbrs	r22, 0
    11ce:	1b c0       	rjmp	.+54     	; 0x1206 <__floatsisf+0x6c>
    11d0:	6f 5f       	subi	r22, 0xFF	; 255
    11d2:	7f 4f       	sbci	r23, 0xFF	; 255
    11d4:	8f 4f       	sbci	r24, 0xFF	; 255
    11d6:	9f 4f       	sbci	r25, 0xFF	; 255
    11d8:	16 c0       	rjmp	.+44     	; 0x1206 <__floatsisf+0x6c>
    11da:	88 23       	and	r24, r24
    11dc:	11 f0       	breq	.+4      	; 0x11e2 <__floatsisf+0x48>
    11de:	96 e9       	ldi	r25, 0x96	; 150
    11e0:	11 c0       	rjmp	.+34     	; 0x1204 <__floatsisf+0x6a>
    11e2:	77 23       	and	r23, r23
    11e4:	21 f0       	breq	.+8      	; 0x11ee <__floatsisf+0x54>
    11e6:	9e e8       	ldi	r25, 0x8E	; 142
    11e8:	87 2f       	mov	r24, r23
    11ea:	76 2f       	mov	r23, r22
    11ec:	05 c0       	rjmp	.+10     	; 0x11f8 <__floatsisf+0x5e>
    11ee:	66 23       	and	r22, r22
    11f0:	71 f0       	breq	.+28     	; 0x120e <__floatsisf+0x74>
    11f2:	96 e8       	ldi	r25, 0x86	; 134
    11f4:	86 2f       	mov	r24, r22
    11f6:	70 e0       	ldi	r23, 0x00	; 0
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	2a f0       	brmi	.+10     	; 0x1206 <__floatsisf+0x6c>
    11fc:	9a 95       	dec	r25
    11fe:	66 0f       	add	r22, r22
    1200:	77 1f       	adc	r23, r23
    1202:	88 1f       	adc	r24, r24
    1204:	da f7       	brpl	.-10     	; 0x11fc <__floatsisf+0x62>
    1206:	88 0f       	add	r24, r24
    1208:	96 95       	lsr	r25
    120a:	87 95       	ror	r24
    120c:	97 f9       	bld	r25, 7
    120e:	08 95       	ret

00001210 <__fp_inf>:
    1210:	97 f9       	bld	r25, 7
    1212:	9f 67       	ori	r25, 0x7F	; 127
    1214:	80 e8       	ldi	r24, 0x80	; 128
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	60 e0       	ldi	r22, 0x00	; 0
    121a:	08 95       	ret

0000121c <__fp_nan>:
    121c:	9f ef       	ldi	r25, 0xFF	; 255
    121e:	80 ec       	ldi	r24, 0xC0	; 192
    1220:	08 95       	ret

00001222 <__fp_pscA>:
    1222:	00 24       	eor	r0, r0
    1224:	0a 94       	dec	r0
    1226:	16 16       	cp	r1, r22
    1228:	17 06       	cpc	r1, r23
    122a:	18 06       	cpc	r1, r24
    122c:	09 06       	cpc	r0, r25
    122e:	08 95       	ret

00001230 <__fp_pscB>:
    1230:	00 24       	eor	r0, r0
    1232:	0a 94       	dec	r0
    1234:	12 16       	cp	r1, r18
    1236:	13 06       	cpc	r1, r19
    1238:	14 06       	cpc	r1, r20
    123a:	05 06       	cpc	r0, r21
    123c:	08 95       	ret

0000123e <__fp_round>:
    123e:	09 2e       	mov	r0, r25
    1240:	03 94       	inc	r0
    1242:	00 0c       	add	r0, r0
    1244:	11 f4       	brne	.+4      	; 0x124a <__fp_round+0xc>
    1246:	88 23       	and	r24, r24
    1248:	52 f0       	brmi	.+20     	; 0x125e <__fp_round+0x20>
    124a:	bb 0f       	add	r27, r27
    124c:	40 f4       	brcc	.+16     	; 0x125e <__fp_round+0x20>
    124e:	bf 2b       	or	r27, r31
    1250:	11 f4       	brne	.+4      	; 0x1256 <__fp_round+0x18>
    1252:	60 ff       	sbrs	r22, 0
    1254:	04 c0       	rjmp	.+8      	; 0x125e <__fp_round+0x20>
    1256:	6f 5f       	subi	r22, 0xFF	; 255
    1258:	7f 4f       	sbci	r23, 0xFF	; 255
    125a:	8f 4f       	sbci	r24, 0xFF	; 255
    125c:	9f 4f       	sbci	r25, 0xFF	; 255
    125e:	08 95       	ret

00001260 <__fp_split3>:
    1260:	57 fd       	sbrc	r21, 7
    1262:	90 58       	subi	r25, 0x80	; 128
    1264:	44 0f       	add	r20, r20
    1266:	55 1f       	adc	r21, r21
    1268:	59 f0       	breq	.+22     	; 0x1280 <__fp_splitA+0x10>
    126a:	5f 3f       	cpi	r21, 0xFF	; 255
    126c:	71 f0       	breq	.+28     	; 0x128a <__fp_splitA+0x1a>
    126e:	47 95       	ror	r20

00001270 <__fp_splitA>:
    1270:	88 0f       	add	r24, r24
    1272:	97 fb       	bst	r25, 7
    1274:	99 1f       	adc	r25, r25
    1276:	61 f0       	breq	.+24     	; 0x1290 <__fp_splitA+0x20>
    1278:	9f 3f       	cpi	r25, 0xFF	; 255
    127a:	79 f0       	breq	.+30     	; 0x129a <__fp_splitA+0x2a>
    127c:	87 95       	ror	r24
    127e:	08 95       	ret
    1280:	12 16       	cp	r1, r18
    1282:	13 06       	cpc	r1, r19
    1284:	14 06       	cpc	r1, r20
    1286:	55 1f       	adc	r21, r21
    1288:	f2 cf       	rjmp	.-28     	; 0x126e <__fp_split3+0xe>
    128a:	46 95       	lsr	r20
    128c:	f1 df       	rcall	.-30     	; 0x1270 <__fp_splitA>
    128e:	08 c0       	rjmp	.+16     	; 0x12a0 <__fp_splitA+0x30>
    1290:	16 16       	cp	r1, r22
    1292:	17 06       	cpc	r1, r23
    1294:	18 06       	cpc	r1, r24
    1296:	99 1f       	adc	r25, r25
    1298:	f1 cf       	rjmp	.-30     	; 0x127c <__fp_splitA+0xc>
    129a:	86 95       	lsr	r24
    129c:	71 05       	cpc	r23, r1
    129e:	61 05       	cpc	r22, r1
    12a0:	08 94       	sec
    12a2:	08 95       	ret

000012a4 <__fp_zero>:
    12a4:	e8 94       	clt

000012a6 <__fp_szero>:
    12a6:	bb 27       	eor	r27, r27
    12a8:	66 27       	eor	r22, r22
    12aa:	77 27       	eor	r23, r23
    12ac:	cb 01       	movw	r24, r22
    12ae:	97 f9       	bld	r25, 7
    12b0:	08 95       	ret

000012b2 <__mulsf3>:
    12b2:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__mulsf3x>
    12b6:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__fp_round>
    12ba:	0e 94 11 09 	call	0x1222	; 0x1222 <__fp_pscA>
    12be:	38 f0       	brcs	.+14     	; 0x12ce <__mulsf3+0x1c>
    12c0:	0e 94 18 09 	call	0x1230	; 0x1230 <__fp_pscB>
    12c4:	20 f0       	brcs	.+8      	; 0x12ce <__mulsf3+0x1c>
    12c6:	95 23       	and	r25, r21
    12c8:	11 f0       	breq	.+4      	; 0x12ce <__mulsf3+0x1c>
    12ca:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__fp_inf>
    12ce:	0c 94 0e 09 	jmp	0x121c	; 0x121c <__fp_nan>
    12d2:	11 24       	eor	r1, r1
    12d4:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__fp_szero>

000012d8 <__mulsf3x>:
    12d8:	0e 94 30 09 	call	0x1260	; 0x1260 <__fp_split3>
    12dc:	70 f3       	brcs	.-36     	; 0x12ba <__mulsf3+0x8>

000012de <__mulsf3_pse>:
    12de:	95 9f       	mul	r25, r21
    12e0:	c1 f3       	breq	.-16     	; 0x12d2 <__mulsf3+0x20>
    12e2:	95 0f       	add	r25, r21
    12e4:	50 e0       	ldi	r21, 0x00	; 0
    12e6:	55 1f       	adc	r21, r21
    12e8:	62 9f       	mul	r22, r18
    12ea:	f0 01       	movw	r30, r0
    12ec:	72 9f       	mul	r23, r18
    12ee:	bb 27       	eor	r27, r27
    12f0:	f0 0d       	add	r31, r0
    12f2:	b1 1d       	adc	r27, r1
    12f4:	63 9f       	mul	r22, r19
    12f6:	aa 27       	eor	r26, r26
    12f8:	f0 0d       	add	r31, r0
    12fa:	b1 1d       	adc	r27, r1
    12fc:	aa 1f       	adc	r26, r26
    12fe:	64 9f       	mul	r22, r20
    1300:	66 27       	eor	r22, r22
    1302:	b0 0d       	add	r27, r0
    1304:	a1 1d       	adc	r26, r1
    1306:	66 1f       	adc	r22, r22
    1308:	82 9f       	mul	r24, r18
    130a:	22 27       	eor	r18, r18
    130c:	b0 0d       	add	r27, r0
    130e:	a1 1d       	adc	r26, r1
    1310:	62 1f       	adc	r22, r18
    1312:	73 9f       	mul	r23, r19
    1314:	b0 0d       	add	r27, r0
    1316:	a1 1d       	adc	r26, r1
    1318:	62 1f       	adc	r22, r18
    131a:	83 9f       	mul	r24, r19
    131c:	a0 0d       	add	r26, r0
    131e:	61 1d       	adc	r22, r1
    1320:	22 1f       	adc	r18, r18
    1322:	74 9f       	mul	r23, r20
    1324:	33 27       	eor	r19, r19
    1326:	a0 0d       	add	r26, r0
    1328:	61 1d       	adc	r22, r1
    132a:	23 1f       	adc	r18, r19
    132c:	84 9f       	mul	r24, r20
    132e:	60 0d       	add	r22, r0
    1330:	21 1d       	adc	r18, r1
    1332:	82 2f       	mov	r24, r18
    1334:	76 2f       	mov	r23, r22
    1336:	6a 2f       	mov	r22, r26
    1338:	11 24       	eor	r1, r1
    133a:	9f 57       	subi	r25, 0x7F	; 127
    133c:	50 40       	sbci	r21, 0x00	; 0
    133e:	9a f0       	brmi	.+38     	; 0x1366 <__mulsf3_pse+0x88>
    1340:	f1 f0       	breq	.+60     	; 0x137e <__mulsf3_pse+0xa0>
    1342:	88 23       	and	r24, r24
    1344:	4a f0       	brmi	.+18     	; 0x1358 <__mulsf3_pse+0x7a>
    1346:	ee 0f       	add	r30, r30
    1348:	ff 1f       	adc	r31, r31
    134a:	bb 1f       	adc	r27, r27
    134c:	66 1f       	adc	r22, r22
    134e:	77 1f       	adc	r23, r23
    1350:	88 1f       	adc	r24, r24
    1352:	91 50       	subi	r25, 0x01	; 1
    1354:	50 40       	sbci	r21, 0x00	; 0
    1356:	a9 f7       	brne	.-22     	; 0x1342 <__mulsf3_pse+0x64>
    1358:	9e 3f       	cpi	r25, 0xFE	; 254
    135a:	51 05       	cpc	r21, r1
    135c:	80 f0       	brcs	.+32     	; 0x137e <__mulsf3_pse+0xa0>
    135e:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__fp_inf>
    1362:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__fp_szero>
    1366:	5f 3f       	cpi	r21, 0xFF	; 255
    1368:	e4 f3       	brlt	.-8      	; 0x1362 <__mulsf3_pse+0x84>
    136a:	98 3e       	cpi	r25, 0xE8	; 232
    136c:	d4 f3       	brlt	.-12     	; 0x1362 <__mulsf3_pse+0x84>
    136e:	86 95       	lsr	r24
    1370:	77 95       	ror	r23
    1372:	67 95       	ror	r22
    1374:	b7 95       	ror	r27
    1376:	f7 95       	ror	r31
    1378:	e7 95       	ror	r30
    137a:	9f 5f       	subi	r25, 0xFF	; 255
    137c:	c1 f7       	brne	.-16     	; 0x136e <__mulsf3_pse+0x90>
    137e:	fe 2b       	or	r31, r30
    1380:	88 0f       	add	r24, r24
    1382:	91 1d       	adc	r25, r1
    1384:	96 95       	lsr	r25
    1386:	87 95       	ror	r24
    1388:	97 f9       	bld	r25, 7
    138a:	08 95       	ret

0000138c <__tablejump2__>:
    138c:	ee 0f       	add	r30, r30
    138e:	ff 1f       	adc	r31, r31
    1390:	05 90       	lpm	r0, Z+
    1392:	f4 91       	lpm	r31, Z
    1394:	e0 2d       	mov	r30, r0
    1396:	09 94       	ijmp

00001398 <_exit>:
    1398:	f8 94       	cli

0000139a <__stop_program>:
    139a:	ff cf       	rjmp	.-2      	; 0x139a <__stop_program>
